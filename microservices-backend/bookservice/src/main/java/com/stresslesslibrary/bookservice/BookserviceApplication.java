package com.stresslesslibrary.bookservice;

import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.annotation.Bean;

import com.stresslesslibrary.bookservice.entities.BookCase;
import com.stresslesslibrary.bookservice.entities.BookCategory;
import com.stresslesslibrary.bookservice.entities.Branch;
import com.stresslesslibrary.bookservice.services.BookCaseService;
import com.stresslesslibrary.bookservice.services.BookCategoryService;
import com.stresslesslibrary.bookservice.services.BranchService;

@SpringBootApplication
public class BookserviceApplication {

	public static void main(String[] args) {
		SpringApplication.run(BookserviceApplication.class, args);
	}

	@Bean
	CommandLineRunner start(BookCaseService bookCaseService, 
	BookCategoryService bookCategoryService, BranchService branchService){
		return args ->{
			try {
				bookCategoryService.getOne("000");
				if(branchService.getOne("000")==null){
						// Saving the bookcases
						bookCaseService.findOne("000");
						bookCaseService.save(new BookCase("000", "Computer science, information & general works"));
						bookCaseService.save(new BookCase("100", "Philosophy & psychology"));
						bookCaseService.save(new BookCase("200", "Religion"));
						bookCaseService.save(new BookCase("300", "Social sciences"));
						bookCaseService.save(new BookCase("400", "Language"));
						bookCaseService.save(new BookCase("500", "Science"));
						bookCaseService.save(new BookCase("600", "Technology"));
						bookCaseService.save(new BookCase("700", "Arts & recreation"));
						bookCaseService.save(new BookCase("800", "Literature"));
						bookCaseService.save(new BookCase("900", "History & geography "));

						// Creating the bookcategories 
						bookCategoryService.save(new BookCategory ("000", "Computer science, knowledge & systems",bookCaseService.findOne("000")));
						bookCategoryService.save(new BookCategory ("010", "Bibliographies",bookCaseService.findOne("000")));
						bookCategoryService.save(new BookCategory ("020", "Library & information sciences",bookCaseService.findOne("000")));
						bookCategoryService.save(new BookCategory ("030", "Encyclopedias & books of facts",bookCaseService.findOne("000")));
						bookCategoryService.save(new BookCategory ("040", "[Unassigned]",bookCaseService.findOne("000")));
						bookCategoryService.save(new BookCategory ("050", "Magazines, journals & serials",bookCaseService.findOne("000")));
						bookCategoryService.save(new BookCategory ("060", "Associations, organizations & museums",bookCaseService.findOne("000")));
						bookCategoryService.save(new BookCategory ("070", "News media, journalism & publishing",bookCaseService.findOne("000")));
						bookCategoryService.save(new BookCategory ("080", "Quotations",bookCaseService.findOne("000")));
						bookCategoryService.save(new BookCategory ("090", "Manuscripts & rare books",bookCaseService.findOne("000")));
						bookCategoryService.save(new BookCategory ("100", "Philosophy",bookCaseService.findOne("100")));
						bookCategoryService.save(new BookCategory ("110", "Metaphysics",bookCaseService.findOne("100")));
						bookCategoryService.save(new BookCategory ("120", "Epistemology",bookCaseService.findOne("100")));
						bookCategoryService.save(new BookCategory ("130", "Parapsychology & occultism",bookCaseService.findOne("100")));
						bookCategoryService.save(new BookCategory ("140", "Philosophical schools of thought",bookCaseService.findOne("100")));
						bookCategoryService.save(new BookCategory ("150", "Psychology",bookCaseService.findOne("100")));
						bookCategoryService.save(new BookCategory ("160", "Philosophical logic",bookCaseService.findOne("100")));
						bookCategoryService.save(new BookCategory("170", "Ethics",bookCaseService.findOne("100")));
						bookCategoryService.save(new BookCategory("180", "Ancient, medieval & eastern philosophy",bookCaseService.findOne("100")));
						bookCategoryService.save(new BookCategory ("190", "Modern western philosophy",bookCaseService.findOne("100")));
						bookCategoryService.save(new BookCategory ("200", "Religion",bookCaseService.findOne("200")));
						bookCategoryService.save(new BookCategory("210", "Philosophy & theory of religion",bookCaseService.findOne("200")));
						bookCategoryService.save(new BookCategory ("220", "The Bible",bookCaseService.findOne("200")));
						bookCategoryService.save(new BookCategory ("230", "Christianity",bookCaseService.findOne("200")));
						bookCategoryService.save(new BookCategory ("240", "Christian practice & observance",bookCaseService.findOne("200")));
						bookCategoryService.save(new BookCategory ("250", "Christian pastoral practice & religious orders",bookCaseService.findOne("200")));
						bookCategoryService.save(new BookCategory ("260", "Christian organization, social work & worship",bookCaseService.findOne("200")));
						bookCategoryService.save(new BookCategory ("270", "History of Christianity",bookCaseService.findOne("200")));
						bookCategoryService.save(new BookCategory ("280", "Christian denominations",bookCaseService.findOne("200")));
						bookCategoryService.save(new BookCategory ("290", "Other religions",bookCaseService.findOne("200")));
						bookCategoryService.save(new BookCategory ("300", "Social sciences, sociology & anthropology",bookCaseService.findOne("300")));
						bookCategoryService.save(new BookCategory("310", "Statistics",bookCaseService.findOne("300")));
						bookCategoryService.save(new BookCategory ("320", "Political science",bookCaseService.findOne("300")));
						bookCategoryService.save(new BookCategory ("330", "Economics",bookCaseService.findOne("300")));
						bookCategoryService.save(new BookCategory ("340", "Law",bookCaseService.findOne("300")));
						bookCategoryService.save(new BookCategory ("350", "Public administration & military science",bookCaseService.findOne("300")));
						bookCategoryService.save(new BookCategory ("360", "Social problems & social services",bookCaseService.findOne("300")));
						bookCategoryService.save(new BookCategory ("370", "Education",bookCaseService.findOne("300")));
						bookCategoryService.save(new BookCategory ("380", "Commerce, communications & transportation",bookCaseService.findOne("300")));
						bookCategoryService.save(new BookCategory ("390", "Customs, etiquette & folklore",bookCaseService.findOne("300")));
						bookCategoryService.save(new BookCategory ("400", "Language",bookCaseService.findOne("400")));
						bookCategoryService.save(new BookCategory ("410", "Linguistics",bookCaseService.findOne("400")));
						bookCategoryService.save(new BookCategory ("420", "English & Old English languages",bookCaseService.findOne("400")));
						bookCategoryService.save(new BookCategory ("430", "German & related languages",bookCaseService.findOne("400")));
						bookCategoryService.save(new BookCategory ("440", "French & related languages",bookCaseService.findOne("400")));
						bookCategoryService.save(new BookCategory ("450", "Italian, Romanian & related languages",bookCaseService.findOne("400")));
						bookCategoryService.save(new BookCategory ("460", "Spanish, Portuguese, Galician",bookCaseService.findOne("400")));
						bookCategoryService.save(new BookCategory ("470", "Latin & Italic languages",bookCaseService.findOne("400")));
						bookCategoryService.save(new BookCategory ("480", "Classical & modern Greek languages",bookCaseService.findOne("400")));
						bookCategoryService.save(new BookCategory ("490", "Other languages",bookCaseService.findOne("400")));
						bookCategoryService.save(new BookCategory ("500", "Science",bookCaseService.findOne("500")));
						bookCategoryService.save(new BookCategory ("510", "Mathematics",bookCaseService.findOne("500")));
						bookCategoryService.save(new BookCategory("520", "Astronomy",bookCaseService.findOne("500")));
						bookCategoryService.save(new BookCategory ("530", "Physics",bookCaseService.findOne("500")));
						bookCategoryService.save(new BookCategory ("540", "Chemistry",bookCaseService.findOne("500")));
						bookCategoryService.save(new BookCategory ("550", "Earth sciences & geology",bookCaseService.findOne("500")));
						bookCategoryService.save(new BookCategory ("560", "Fossils & prehistoric life",bookCaseService.findOne("500")));
						bookCategoryService.save(new BookCategory ("570", "Biology",bookCaseService.findOne("500")));
						bookCategoryService.save(new BookCategory ("580", "Plants (Botany)",bookCaseService.findOne("500")));
						bookCategoryService.save(new BookCategory ("590", "Animals (Zoology)",bookCaseService.findOne("500")));
						bookCategoryService.save(new BookCategory ("600", "Technology",bookCaseService.findOne("600")));
						bookCategoryService.save(new BookCategory ("610", "Medicine & health",bookCaseService.findOne("600")));
						bookCategoryService.save(new BookCategory ("620", "Engineering",bookCaseService.findOne("600")));
						bookCategoryService.save(new BookCategory ("630", "Agriculture",bookCaseService.findOne("600")));
						bookCategoryService.save(new BookCategory ("640", "Home & family management",bookCaseService.findOne("600")));
						bookCategoryService.save(new BookCategory ("650", "Management & public relations",bookCaseService.findOne("600")));
						bookCategoryService.save(new BookCategory ("660", "Chemical engineering",bookCaseService.findOne("600")));
						bookCategoryService.save(new BookCategory ("670", "Manufacturing",bookCaseService.findOne("600")));
						bookCategoryService.save(new BookCategory ("680", "Manufacture for specific uses",bookCaseService.findOne("600")));
						bookCategoryService.save(new BookCategory ("690", "Construction of buildings",bookCaseService.findOne("600")));
						bookCategoryService.save(new BookCategory ("700", "Arts",bookCaseService.findOne("700")));
						bookCategoryService.save(new BookCategory ("710", "Area planning & landscape architecture",bookCaseService.findOne("700")));
						bookCategoryService.save(new BookCategory ("720", "Architecture",bookCaseService.findOne("700")));
						bookCategoryService.save(new BookCategory ("730", "Sculpture, ceramics & metalwork",bookCaseService.findOne("700")));
						bookCategoryService.save(new BookCategory ("740", "Graphic arts & decorative arts",bookCaseService.findOne("700")));
						bookCategoryService.save(new BookCategory ("750", "Painting",bookCaseService.findOne("700")));
						bookCategoryService.save(new BookCategory ("760", "Printmaking & prints",bookCaseService.findOne("700")));
						bookCategoryService.save(new BookCategory ("770", "Photography, computer art, film, video",bookCaseService.findOne("700")));
						bookCategoryService.save(new BookCategory ("780", "Music",bookCaseService.findOne("700")));
						bookCategoryService.save(new BookCategory ("790", "Sports, games & entertainment",bookCaseService.findOne("700")));
						bookCategoryService.save(new BookCategory ("800", "Literature, rhetoric & criticism",bookCaseService.findOne("800")));
						bookCategoryService.save(new BookCategory ("810", "American literature in English",bookCaseService.findOne("800")));
						bookCategoryService.save(new BookCategory ("820", "English & Old English literatures",bookCaseService.findOne("800")));
						bookCategoryService.save(new BookCategory ("830", "German & related literatures",bookCaseService.findOne("800")));
						bookCategoryService.save(new BookCategory ("840", "French & related literatures",bookCaseService.findOne("800")));
						bookCategoryService.save(new BookCategory ("850", "Italian, Romanian & related literatures",bookCaseService.findOne("800")));
						bookCategoryService.save(new BookCategory ("860", "Spanish, Portuguese, Galician literatures",bookCaseService.findOne("800")));
						bookCategoryService.save(new BookCategory ("870", "Latin & Italic literatures",bookCaseService.findOne("800")));
						bookCategoryService.save(new BookCategory ("880", "Classical & modern Greek literatures",bookCaseService.findOne("800")));
						bookCategoryService.save(new BookCategory ("890", "Other literatures",bookCaseService.findOne("800")));
						bookCategoryService.save(new BookCategory ("900", "History",bookCaseService.findOne("900")));
						bookCategoryService.save(new BookCategory ("910", "Geography & travel",bookCaseService.findOne("900")));
						bookCategoryService.save(new BookCategory ("920", "Biography & genealogy",bookCaseService.findOne("900")));
						bookCategoryService.save(new BookCategory ("930", "History of ancient world (to ca. 499)",bookCaseService.findOne("900")));
						bookCategoryService.save(new BookCategory ("940", "History of Europe",bookCaseService.findOne("900")));
						bookCategoryService.save(new BookCategory ("950", "History of Asia",bookCaseService.findOne("900")));
						bookCategoryService.save(new BookCategory ("960", "History of Africa",bookCaseService.findOne("900")));
						bookCategoryService.save(new BookCategory ("970", "History of North America",bookCaseService.findOne("900")));
						bookCategoryService.save(new BookCategory ("980", "History of South America",bookCaseService.findOne("900")));
						bookCategoryService.save(new BookCategory ("990", "History of other areas",bookCaseService.findOne("900")));

						// creatiing branches

						branchService.save( new Branch("001", "Knowledge",bookCategoryService.getOne("000")));
						branchService.save( new Branch("002", "The book",bookCategoryService.getOne("000")));
						branchService.save( new Branch("003", "Systems",bookCategoryService.getOne("000")));
						branchService.save( new Branch("004", "Computer science",bookCategoryService.getOne("000")));
						branchService.save( new Branch("005", "Computer programming, programs, data, security",bookCategoryService.getOne("000")));
						branchService.save( new Branch("006", "Special computer methods",bookCategoryService.getOne("000")));
						branchService.save( new Branch("007", "[Unassigned]",bookCategoryService.getOne("000")));
						branchService.save( new Branch("008", "[Unassigned]",bookCategoryService.getOne("000")));
						branchService.save( new Branch("009", "[Unassigned]",bookCategoryService.getOne("000")));
						branchService.save( new Branch("010", "Bibliography",bookCategoryService.getOne("010")));
						branchService.save( new Branch("011", "Bibliographies and catalogs",bookCategoryService.getOne("010")));
						branchService.save( new Branch("012", "Bibliographies and catalogs of individuals",bookCategoryService.getOne("010")));
						branchService.save( new Branch("013", "[Unassigned]",bookCategoryService.getOne("010")));
						branchService.save( new Branch("014", "Of anonymous & pseudonymous works",bookCategoryService.getOne("010")));
						branchService.save( new Branch("015", "Of works from specific places",bookCategoryService.getOne("010")));
						branchService.save( new Branch("016", "Of works on specific subjects",bookCategoryService.getOne("010")));
						branchService.save( new Branch("017", "Of works held in specific collections or offered for sale",bookCategoryService.getOne("010")));
						branchService.save( new Branch("018", "[Unassigned]",bookCategoryService.getOne("010")));
						branchService.save( new Branch("019", "[Unassigned]",bookCategoryService.getOne("010")));
						branchService.save( new Branch("020", "Library and information sciences",bookCategoryService.getOne("020")));
						branchService.save( new Branch("021", "Relationships of libraries and archives",bookCategoryService.getOne("020")));
						branchService.save( new Branch("022", "Administration of physical plant",bookCategoryService.getOne("020")));
						branchService.save( new Branch("023", "Personnel management",bookCategoryService.getOne("020")));
						branchService.save( new Branch("024", "[Unassigned]",bookCategoryService.getOne("020")));
						branchService.save( new Branch("025", "Operations of libraries and archives",bookCategoryService.getOne("020")));
						branchService.save( new Branch("026", "Libraries and archives devoted to specific subjects",bookCategoryService.getOne("020")));
						branchService.save( new Branch("027", "General libraries and archives",bookCategoryService.getOne("020")));
						branchService.save( new Branch("028", "Reading and use of other information media",bookCategoryService.getOne("020")));
						branchService.save( new Branch("029", "[Unassigned]",bookCategoryService.getOne("020")));
						branchService.save( new Branch("030", "General encyclopedic works",bookCategoryService.getOne("030")));
						branchService.save( new Branch("031", "General encyclopedic works in American English",bookCategoryService.getOne("030")));
						branchService.save( new Branch("032", "General encyclopedic works in English",bookCategoryService.getOne("030")));
						branchService.save( new Branch("033", "Encyclopedias in other Germanic languages",bookCategoryService.getOne("030")));
						branchService.save( new Branch("034", "Encyclopedias in French, Occitan, Catalan",bookCategoryService.getOne("030")));
						branchService.save( new Branch("035", "Encyclopedias in Italian, Romanian & related languages",bookCategoryService.getOne("030")));
						branchService.save( new Branch("036", "Encyclopedias in Spanish, Portuguese, Galician",bookCategoryService.getOne("030")));
						branchService.save( new Branch("037", "General encyclopedic works in Slavic languages",bookCategoryService.getOne("030")));
						branchService.save( new Branch("038", "General encyclopedic works in Scandinavian languages",bookCategoryService.getOne("030")));
						branchService.save( new Branch("039", "General encyclopedic works in other languages",bookCategoryService.getOne("030")));
						branchService.save( new Branch("040", "Unassigned",bookCategoryService.getOne("040")));
						branchService.save( new Branch("041", "Unassigned",bookCategoryService.getOne("040")));
						branchService.save( new Branch("042", "Unassigned",bookCategoryService.getOne("040")));
						branchService.save( new Branch("043", "Unassigned",bookCategoryService.getOne("040")));
						branchService.save( new Branch("044", "Unassigned",bookCategoryService.getOne("040")));
						branchService.save( new Branch("045", "Unassigned",bookCategoryService.getOne("040")));
						branchService.save( new Branch("046", "Unassigned",bookCategoryService.getOne("040")));
						branchService.save( new Branch("047", "Unassigned",bookCategoryService.getOne("040")));
						branchService.save( new Branch("048", "Unassigned",bookCategoryService.getOne("040")));
						branchService.save( new Branch("049", "Unassigned",bookCategoryService.getOne("040")));
						branchService.save( new Branch("050", "General serial publications",bookCategoryService.getOne("050")));
						branchService.save( new Branch("051", "General serial publications in American English",bookCategoryService.getOne("050")));
						branchService.save( new Branch("052", "General serial publications in English",bookCategoryService.getOne("050")));
						branchService.save( new Branch("053", "Serials in other Germanic languages",bookCategoryService.getOne("050")));
						branchService.save( new Branch("054", "Serials in French, Occitan, Catalan",bookCategoryService.getOne("050")));
						branchService.save( new Branch("055", "Serials in Italian, Romanian & related languages",bookCategoryService.getOne("050")));
						branchService.save( new Branch("056", "Serials in Spanish, Portuguese, Galician",bookCategoryService.getOne("050")));
						branchService.save( new Branch("057", "General serial publications in Slavic languages",bookCategoryService.getOne("050")));
						branchService.save( new Branch("058", "Serials in Scandinavian languages",bookCategoryService.getOne("050")));
						branchService.save( new Branch("059", "General serial publications in other languages",bookCategoryService.getOne("050")));
						branchService.save( new Branch("060", "General organizations and museology",bookCategoryService.getOne("060")));
						branchService.save( new Branch("061", "General organizations in North America",bookCategoryService.getOne("060")));
						branchService.save( new Branch("062", "General organizations in British Isles",bookCategoryService.getOne("060")));
						branchService.save( new Branch("063", "General organizations in Germany",bookCategoryService.getOne("060")));
						branchService.save( new Branch("064", "General organizations in France and Monaco",bookCategoryService.getOne("060")));
						branchService.save( new Branch("065", "General organizations in Italy",bookCategoryService.getOne("060")));
						branchService.save( new Branch("066", "General organizations in Spain",bookCategoryService.getOne("060")));
						branchService.save( new Branch("067", "General organizations in Russia",bookCategoryService.getOne("060")));
						branchService.save( new Branch("068", "General organizations in other geographic areas",bookCategoryService.getOne("060")));
						branchService.save( new Branch("069", "Museology (Museum science)",bookCategoryService.getOne("060")));
						branchService.save( new Branch("070", "Documentary, educational, news media; journalism",bookCategoryService.getOne("070")));
						branchService.save( new Branch("071", "Journalism and newspapers in North America",bookCategoryService.getOne("070")));
						branchService.save( new Branch("072", "Journalism and newspapers in British Isles",bookCategoryService.getOne("070")));
						branchService.save( new Branch("073", "Journalism and newspapers in Germany",bookCategoryService.getOne("070")));
						branchService.save( new Branch("074", "Journalism and newspapers in France and Monaco",bookCategoryService.getOne("070")));
						branchService.save( new Branch("075", "Journalism and newspapers in Italy",bookCategoryService.getOne("070")));
						branchService.save( new Branch("076", "Journalism and newspapers in Spain",bookCategoryService.getOne("070")));
						branchService.save( new Branch("077", "Journalism and newspapers in Russia",bookCategoryService.getOne("070")));
						branchService.save( new Branch("078", "Journalism and newspapers in Scandinavia",bookCategoryService.getOne("070")));
						branchService.save( new Branch("079", "Newspapers in other geographic areas",bookCategoryService.getOne("070")));
						branchService.save( new Branch("080", "General collections",bookCategoryService.getOne("080")));
						branchService.save( new Branch("081", "General collections in American English",bookCategoryService.getOne("080")));
						branchService.save( new Branch("082", "General collections in English",bookCategoryService.getOne("080")));
						branchService.save( new Branch("083", "General collections in other Germanic languages",bookCategoryService.getOne("080")));
						branchService.save( new Branch("084", "General collections in French, Occitan, Catalan",bookCategoryService.getOne("080")));
						branchService.save( new Branch("085", "Collections in Italian, Romanian & related languages",bookCategoryService.getOne("080")));
						branchService.save( new Branch("086", "Collections in Spanish, Portuguese, Galician",bookCategoryService.getOne("080")));
						branchService.save( new Branch("087", "General collections in Slavic languages",bookCategoryService.getOne("080")));
						branchService.save( new Branch("088", "General collections in Scandinavian languages",bookCategoryService.getOne("080")));
						branchService.save( new Branch("089", "General collections in other languages",bookCategoryService.getOne("080")));
						branchService.save( new Branch("090", "Manuscripts, rare books", bookCategoryService.getOne("090")));
						branchService.save( new Branch("091", "Manuscripts", bookCategoryService.getOne("090")));
						branchService.save( new Branch("092", "Block books", bookCategoryService.getOne("090")));
						branchService.save( new Branch("093", "Incunabula", bookCategoryService.getOne("090")));
						branchService.save( new Branch("094", "Printed books", bookCategoryService.getOne("090")));
						branchService.save( new Branch("095", "Books notable for bindings", bookCategoryService.getOne("090")));
						branchService.save( new Branch("096", "Books notable for illustrations and materials", bookCategoryService.getOne("090")));
						branchService.save( new Branch("097", "Books notable for ownership or origin", bookCategoryService.getOne("090")));
						branchService.save( new Branch("098", "Prohibited works, forgeries, hoaxes", bookCategoryService.getOne("090")));
						branchService.save( new Branch("099", "Books notable for format", bookCategoryService.getOne("090")));
						branchService.save( new Branch("100", "Philosophy & psychology",bookCategoryService.getOne("100")));
						branchService.save( new Branch("101", "Theory of philosophy",bookCategoryService.getOne("100")));
						branchService.save( new Branch("102", "Miscellany of philosophy",bookCategoryService.getOne("100")));
						branchService.save( new Branch("103", "Dictionaries & encyclopedias",bookCategoryService.getOne("100")));
						branchService.save( new Branch("104", "[Unassigned]",bookCategoryService.getOne("100")));
						branchService.save( new Branch("105", "Serial publications of philosophy",bookCategoryService.getOne("100")));
						branchService.save( new Branch("106", "Organizations & management",bookCategoryService.getOne("100")));
						branchService.save( new Branch("107", "Education, research & related topics",bookCategoryService.getOne("100")));
						branchService.save( new Branch("108", "Groups of people",bookCategoryService.getOne("100")));
						branchService.save( new Branch("109", "History and collected biography",bookCategoryService.getOne("100")));
						branchService.save( new Branch("110", "Metaphysics",bookCategoryService.getOne("110")));
						branchService.save( new Branch("111", "Ontology",bookCategoryService.getOne("110")));
						branchService.save( new Branch("112", "[Unassigned]",bookCategoryService.getOne("110")));
						branchService.save( new Branch("113", "Cosmology (Philosophy of nature)",bookCategoryService.getOne("110")));
						branchService.save( new Branch("114", "Space",bookCategoryService.getOne("110")));
						branchService.save( new Branch("115", "Time",bookCategoryService.getOne("110")));
						branchService.save( new Branch("116", "Change",bookCategoryService.getOne("110")));
						branchService.save( new Branch("117", "Structure",bookCategoryService.getOne("110")));
						branchService.save( new Branch("118", "Force and energy",bookCategoryService.getOne("110")));
						branchService.save( new Branch("119", "Number and quantity",bookCategoryService.getOne("110")));
						branchService.save( new Branch("120", "Epistemology, causation, humankind",bookCategoryService.getOne("120")));
						branchService.save( new Branch("121", "Epistemology (Theory of knowledge)",bookCategoryService.getOne("120")));
						branchService.save( new Branch("122", "Causation",bookCategoryService.getOne("120")));
						branchService.save( new Branch("123", "Determinism and indeterminism",bookCategoryService.getOne("120")));
						branchService.save( new Branch("124", "Teleology",bookCategoryService.getOne("120")));
						branchService.save( new Branch("125", "[Unassigned]",bookCategoryService.getOne("120")));
						branchService.save( new Branch("126", "The self",bookCategoryService.getOne("120")));
						branchService.save( new Branch("127", "The unconscious and the subconscious",bookCategoryService.getOne("120")));
						branchService.save( new Branch("128", "Humankind",bookCategoryService.getOne("120")));
						branchService.save( new Branch("129", "Origin and destiny of individual souls",bookCategoryService.getOne("120")));
						branchService.save( new Branch("130", "Parapsychology and occultism",bookCategoryService.getOne("130")));
						branchService.save( new Branch("131", "Parapsychological and occult methods",bookCategoryService.getOne("130")));
						branchService.save( new Branch("132", "[Unassigned]",bookCategoryService.getOne("130")));
						branchService.save( new Branch("133", "Specific topics in parapsychology & occultism",bookCategoryService.getOne("130")));
						branchService.save( new Branch("134", "[Unassigned]",bookCategoryService.getOne("130")));
						branchService.save( new Branch("135", "Dreams and mysteries",bookCategoryService.getOne("130")));
						branchService.save( new Branch("136", "[Unassigned]",bookCategoryService.getOne("130")));
						branchService.save( new Branch("137", "Divinatory graphology",bookCategoryService.getOne("130")));
						branchService.save( new Branch("138", "Physiognomy",bookCategoryService.getOne("130")));
						branchService.save( new Branch("139", "Phrenology",bookCategoryService.getOne("130")));
						branchService.save( new Branch("140", "Specific philosophical schools",bookCategoryService.getOne("140")));
						branchService.save( new Branch("141", "Idealism and related systems",bookCategoryService.getOne("140")));
						branchService.save( new Branch("142", "Critical philosophy",bookCategoryService.getOne("140")));
						branchService.save( new Branch("143", "Bergsonism and intuitionism",bookCategoryService.getOne("140")));
						branchService.save( new Branch("144", "Humanism and related systems",bookCategoryService.getOne("140")));
						branchService.save( new Branch("145", "Sensationalism",bookCategoryService.getOne("140")));
						branchService.save( new Branch("146", "Naturalism and related systems",bookCategoryService.getOne("140")));
						branchService.save( new Branch("147", "Pantheism and related systems",bookCategoryService.getOne("140")));
						branchService.save( new Branch("148", "Dogmatism, eclecticism, liberalism, etc.",bookCategoryService.getOne("140")));
						branchService.save( new Branch("149", "Other philosophical systems and doctrines",bookCategoryService.getOne("140")));
						branchService.save( new Branch("150", "Psychology",bookCategoryService.getOne("150")));
						branchService.save( new Branch("151", "[Unassigned]",bookCategoryService.getOne("150")));
						branchService.save( new Branch("152", "Perception, movement, emotions & drives",bookCategoryService.getOne("150")));
						branchService.save( new Branch("153", "Conscious mental processes & intelligence",bookCategoryService.getOne("150")));
						branchService.save( new Branch("154", "Subconscious & altered states",bookCategoryService.getOne("150")));
						branchService.save( new Branch("155", "Differential & developmental psychology",bookCategoryService.getOne("150")));
						branchService.save( new Branch("156", "Comparative psychology",bookCategoryService.getOne("150")));
						branchService.save( new Branch("157", "[Unassigned]",bookCategoryService.getOne("150")));
						branchService.save( new Branch("158", "Applied psychology",bookCategoryService.getOne("150")));
						branchService.save( new Branch("159", "[Unassigned]",bookCategoryService.getOne("150")));
						branchService.save( new Branch("160", "Philosophical logic",bookCategoryService.getOne("160")));
						branchService.save( new Branch("161", "Induction",bookCategoryService.getOne("160")));
						branchService.save( new Branch("162", "Deduction",bookCategoryService.getOne("160")));
						branchService.save( new Branch("163", "[Unassigned]",bookCategoryService.getOne("160")));
						branchService.save( new Branch("164", "[Unassigned]",bookCategoryService.getOne("160")));
						branchService.save( new Branch("165", "Fallacies and sources of error",bookCategoryService.getOne("160")));
						branchService.save( new Branch("166", "Syllogisms",bookCategoryService.getOne("160")));
						branchService.save( new Branch("167", "Hypotheses",bookCategoryService.getOne("160")));
						branchService.save( new Branch("168", "Argument and persuasion",bookCategoryService.getOne("160")));
						branchService.save( new Branch("169", "Analogy",bookCategoryService.getOne("160")));
						branchService.save( new Branch("170", "Ethics (Moral philosophy)",bookCategoryService.getOne("170")));
						branchService.save( new Branch("171", "Ethical systems",bookCategoryService.getOne("170")));
						branchService.save( new Branch("172", "Political ethics",bookCategoryService.getOne("170")));
						branchService.save( new Branch("173", "Ethics of family relationships",bookCategoryService.getOne("170")));
						branchService.save( new Branch("174", "Occupational ethics",bookCategoryService.getOne("170")));
						branchService.save( new Branch("175", "Ethics of recreation & leisure",bookCategoryService.getOne("170")));
						branchService.save( new Branch("176", "Ethics of sex and reproduction",bookCategoryService.getOne("170")));
						branchService.save( new Branch("177", "Ethics of social relations",bookCategoryService.getOne("170")));
						branchService.save( new Branch("178", "Ethics of consumption",bookCategoryService.getOne("170")));
						branchService.save( new Branch("179", "Other ethical norms",bookCategoryService.getOne("170")));
						branchService.save( new Branch("180", "Ancient, medieval, eastern philosophy",bookCategoryService.getOne("180")));
						branchService.save( new Branch("181", "Eastern philosophy",bookCategoryService.getOne("180")));
						branchService.save( new Branch("182", "Pre-Socratic Greek philosophies",bookCategoryService.getOne("180")));
						branchService.save( new Branch("183", "Sophistic, Socratic, related philosophies",bookCategoryService.getOne("180")));
						branchService.save( new Branch("184", "Platonic philosophy",bookCategoryService.getOne("180")));
						branchService.save( new Branch("185", "Aristotelian philosophy",bookCategoryService.getOne("180")));
						branchService.save( new Branch("186", "Skeptic and Neoplatonic philosophies",bookCategoryService.getOne("180")));
						branchService.save( new Branch("187", "Epicurean philosophy",bookCategoryService.getOne("180")));
						branchService.save( new Branch("188", "Stoic philosophy",bookCategoryService.getOne("180")));
						branchService.save( new Branch("189", "Medieval western philosophy",bookCategoryService.getOne("180")));
						branchService.save( new Branch("190", "Modern western philosophy",bookCategoryService.getOne("190")));
						branchService.save( new Branch("191", "Philosophy of United States and Canada",bookCategoryService.getOne("190")));
						branchService.save( new Branch("192", "Philosophy of British Isles",bookCategoryService.getOne("190")));
						branchService.save( new Branch("193", "Philosophy of Germany and Austria",bookCategoryService.getOne("190")));
						branchService.save( new Branch("194", "Philosophy of France",bookCategoryService.getOne("190")));
						branchService.save( new Branch("195", "Philosophy of Italy",bookCategoryService.getOne("190")));
						branchService.save( new Branch("196", "Philosophy of Spain and Portugal",bookCategoryService.getOne("190")));
						branchService.save( new Branch("197", "Philosophy of Russia",bookCategoryService.getOne("190")));
						branchService.save( new Branch("198", "Philosophy of Scandinavia and Finland",bookCategoryService.getOne("190")));
						branchService.save( new Branch("199", "Philosophy of other geographic areas",bookCategoryService.getOne("190")));
						branchService.save( new Branch("200", "Religion",bookCategoryService.getOne("200")));
						branchService.save( new Branch("201", "Religious mythology & social theology",bookCategoryService.getOne("200")));
						branchService.save( new Branch("202", "Doctrines",bookCategoryService.getOne("200")));
						branchService.save( new Branch("203", "Public worship and other practices",bookCategoryService.getOne("200")));
						branchService.save( new Branch("204", "Religious experience, life, practice",bookCategoryService.getOne("200")));
						branchService.save( new Branch("205", "Religious ethics",bookCategoryService.getOne("200")));
						branchService.save( new Branch("206", "Leaders and organization",bookCategoryService.getOne("200")));
						branchService.save( new Branch("207", "Missions and religious education",bookCategoryService.getOne("200")));
						branchService.save( new Branch("208", "Sources",bookCategoryService.getOne("200")));
						branchService.save( new Branch("209", "Sects and reform movements",bookCategoryService.getOne("200")));
						branchService.save( new Branch("210", "Philosophy and theory of religion",bookCategoryService.getOne("210")));
						branchService.save( new Branch("211", "Concepts of God",bookCategoryService.getOne("210")));
						branchService.save( new Branch("212", "Existence, knowability & attributes of God",bookCategoryService.getOne("210")));
						branchService.save( new Branch("213", "Creation",bookCategoryService.getOne("210")));
						branchService.save( new Branch("214", "Theodicy",bookCategoryService.getOne("210")));
						branchService.save( new Branch("215", "Science and religion",bookCategoryService.getOne("210")));
						branchService.save( new Branch("216", "[Unassigned]",bookCategoryService.getOne("210")));
						branchService.save( new Branch("217", "[Unassigned]",bookCategoryService.getOne("210")));
						branchService.save( new Branch("218", "Humankind",bookCategoryService.getOne("210")));
						branchService.save( new Branch("219", "[Unassigned]",bookCategoryService.getOne("210")));
						branchService.save( new Branch("220", "Bible",bookCategoryService.getOne("220")));
						branchService.save( new Branch("221", "Old Testament (Tanakh)",bookCategoryService.getOne("220")));
						branchService.save( new Branch("222", "Historical books of Old Testament",bookCategoryService.getOne("220")));
						branchService.save( new Branch("223", "Poetic books of Old Testament",bookCategoryService.getOne("220")));
						branchService.save( new Branch("224", "Prophetic books of Old Testament",bookCategoryService.getOne("220")));
						branchService.save( new Branch("225", "New Testament",bookCategoryService.getOne("220")));
						branchService.save( new Branch("226", "Gospels and Acts",bookCategoryService.getOne("220")));
						branchService.save( new Branch("227", "Epistles",bookCategoryService.getOne("220")));
						branchService.save( new Branch("228", "Revelation (Apocalypse)",bookCategoryService.getOne("220")));
						branchService.save( new Branch("229", "Apocrypha and pseudepigrapha",bookCategoryService.getOne("220")));
						branchService.save( new Branch("230", "Christianity",bookCategoryService.getOne("230")));
						branchService.save( new Branch("231", "God",bookCategoryService.getOne("230")));
						branchService.save( new Branch("232", "Jesus Christ and his family",bookCategoryService.getOne("230")));
						branchService.save( new Branch("233", "Humankind",bookCategoryService.getOne("230")));
						branchService.save( new Branch("234", "Salvation and grace",bookCategoryService.getOne("230")));
						branchService.save( new Branch("235", "Spiritual beings",bookCategoryService.getOne("230")));
						branchService.save( new Branch("236", "Eschatology",bookCategoryService.getOne("230")));
						branchService.save( new Branch("237", "[Unassigned]",bookCategoryService.getOne("230")));
						branchService.save( new Branch("238", "Creeds & catechisms",bookCategoryService.getOne("230")));
						branchService.save( new Branch("239", "Apologetics and polemics",bookCategoryService.getOne("230")));
						branchService.save( new Branch("240", "Christian moral and devotional theology",bookCategoryService.getOne("240")));
						branchService.save( new Branch("241", "Christian ethics",bookCategoryService.getOne("240")));
						branchService.save( new Branch("242", "Devotional literature",bookCategoryService.getOne("240")));
						branchService.save( new Branch("243", "Evangelistic writings for individuals",bookCategoryService.getOne("240")));
						branchService.save( new Branch("244", "[Unassigned]",bookCategoryService.getOne("240")));
						branchService.save( new Branch("245", "[Unassigned]",bookCategoryService.getOne("240")));
						branchService.save( new Branch("246", "Use of art in Christianity",bookCategoryService.getOne("240")));
						branchService.save( new Branch("247", "Church furnishings and related articles",bookCategoryService.getOne("240")));
						branchService.save( new Branch("248", "Christian experience, practice, life",bookCategoryService.getOne("240")));
						branchService.save( new Branch("249", "Christian observances in family life",bookCategoryService.getOne("240")));
						branchService.save( new Branch("250", "Local Christian church and religious orders",bookCategoryService.getOne("250")));
						branchService.save( new Branch("251", "Preaching (Homiletics)",bookCategoryService.getOne("250")));
						branchService.save( new Branch("252", "Texts of sermons",bookCategoryService.getOne("250")));
						branchService.save( new Branch("253", "Pastoral work (Pastoral theology)",bookCategoryService.getOne("250")));
						branchService.save( new Branch("254", "Local church administration",bookCategoryService.getOne("250")));
						branchService.save( new Branch("255", "Religious congregations and orders",bookCategoryService.getOne("250")));
						branchService.save( new Branch("256", "[Unassigned] ",bookCategoryService.getOne("250")));
						branchService.save( new Branch("257", "[Unassigned] ",bookCategoryService.getOne("250")));
						branchService.save( new Branch("258", "[Unassigned]",bookCategoryService.getOne("250")));
						branchService.save( new Branch("259", "Pastoral care of families & kinds of persons",bookCategoryService.getOne("250")));
						branchService.save( new Branch("260", "Christian social and ecclesiastical theology",bookCategoryService.getOne("260")));
						branchService.save( new Branch("261", "Social theology and interreligious relations",bookCategoryService.getOne("260")));
						branchService.save( new Branch("262", "Ecclesiology",bookCategoryService.getOne("260")));
						branchService.save( new Branch("263", "Days, times, places of religious observance",bookCategoryService.getOne("260")));
						branchService.save( new Branch("264", "Public worship",bookCategoryService.getOne("260")));
						branchService.save( new Branch("265", "Sacraments, other rites and acts",bookCategoryService.getOne("260")));
						branchService.save( new Branch("266", "Missions",bookCategoryService.getOne("260")));
						branchService.save( new Branch("267", "Associations for religious work",bookCategoryService.getOne("260")));
						branchService.save( new Branch("268", "Religious education",bookCategoryService.getOne("260")));
						branchService.save( new Branch("269", "Spiritual renewal",bookCategoryService.getOne("260")));
						branchService.save( new Branch("270", "History, geographic treatment, biography",bookCategoryService.getOne("270")));
						branchService.save( new Branch("271", "Religious orders in church history",bookCategoryService.getOne("270")));
						branchService.save( new Branch("272", "Persecutions in general church history",bookCategoryService.getOne("270")));
						branchService.save( new Branch("273", "Doctrinal controversies & heresies",bookCategoryService.getOne("270")));
						branchService.save( new Branch("274", "History of Christianity in Europe",bookCategoryService.getOne("270")));
						branchService.save( new Branch("275", "History of Christianity in Asia",bookCategoryService.getOne("270")));
						branchService.save( new Branch("276", "History of Christianity in Africa",bookCategoryService.getOne("270")));
						branchService.save( new Branch("277", "History of Christianity in North America",bookCategoryService.getOne("270")));
						branchService.save( new Branch("278", "History of Christianity in South America",bookCategoryService.getOne("270")));
						branchService.save( new Branch("279", "History of Christianity in other areas",bookCategoryService.getOne("270")));
						branchService.save( new Branch("280", "Denominations & sects of Christian church",bookCategoryService.getOne("280")));
						branchService.save( new Branch("281", "Early church and Eastern churches",bookCategoryService.getOne("280")));
						branchService.save( new Branch("282", "Roman Catholic Church",bookCategoryService.getOne("280")));
						branchService.save( new Branch("283", "Anglican churches",bookCategoryService.getOne("280")));
						branchService.save( new Branch("284", "Protestants of Continental origin",bookCategoryService.getOne("280")));
						branchService.save( new Branch("285", "Presbyterian, Reformed & Congregational",bookCategoryService.getOne("280")));
						branchService.save( new Branch("286", "Baptist, Restoration & Adventist",bookCategoryService.getOne("280")));
						branchService.save( new Branch("287", "Methodist and related churches",bookCategoryService.getOne("280")));
						branchService.save( new Branch("288", "[Unassigned]",bookCategoryService.getOne("280")));
						branchService.save( new Branch("289", "Other denominations and sects",bookCategoryService.getOne("280")));
						branchService.save( new Branch("290", "Other religions",bookCategoryService.getOne("290")));
						branchService.save( new Branch("291", "[Unassigned]",bookCategoryService.getOne("290")));
						branchService.save( new Branch("292", "Classical religion (Greek & Roman religion)",bookCategoryService.getOne("290")));
						branchService.save( new Branch("293", "Germanic religion",bookCategoryService.getOne("290")));
						branchService.save( new Branch("294", "Religions of Indic origin",bookCategoryService.getOne("290")));
						branchService.save( new Branch("295", "Zoroastrianism (Mazdaism, Parseeism)",bookCategoryService.getOne("290")));
						branchService.save( new Branch("296", "Judaism",bookCategoryService.getOne("290")));
						branchService.save( new Branch("297", "Islam, Babism & Bahai Faith",bookCategoryService.getOne("290")));
						branchService.save( new Branch("298", "(Optional number)",bookCategoryService.getOne("290")));
						branchService.save( new Branch("299", "Religions not provided for elsewhere",bookCategoryService.getOne("290")));
						branchService.save( new Branch("300", "Social sciences",bookCategoryService.getOne("300")));
						branchService.save( new Branch("301", "Sociology and anthropology",bookCategoryService.getOne("300")));
						branchService.save( new Branch("302", "Social interaction",bookCategoryService.getOne("300")));
						branchService.save( new Branch("303", "Social processes",bookCategoryService.getOne("300")));
						branchService.save( new Branch("304", "Factors affecting social behavior",bookCategoryService.getOne("300")));
						branchService.save( new Branch("305", "Groups of people",bookCategoryService.getOne("300")));
						branchService.save( new Branch("306", "Culture and institutions",bookCategoryService.getOne("300")));
						branchService.save( new Branch("307", "Communities ",bookCategoryService.getOne("300")));
						branchService.save( new Branch("308", "[Unassigned] ",bookCategoryService.getOne("300")));
						branchService.save( new Branch("309", "[Unassigned] ",bookCategoryService.getOne("300")));
						branchService.save( new Branch("310", "Collections of general statistics",bookCategoryService.getOne("310")));
						branchService.save( new Branch("311", "[Unassigned] ",bookCategoryService.getOne("310")));
						branchService.save( new Branch("312", "[Unassigned]",bookCategoryService.getOne("310")));
						branchService.save( new Branch("313", "[Unassigned]",bookCategoryService.getOne("310")));
						branchService.save( new Branch("314", "General statistics of Europe",bookCategoryService.getOne("310")));
						branchService.save( new Branch("315", "General statistics of Asia",bookCategoryService.getOne("310")));
						branchService.save( new Branch("316", "General statistics of Africa",bookCategoryService.getOne("310")));
						branchService.save( new Branch("317", "General statistics of North America",bookCategoryService.getOne("310")));
						branchService.save( new Branch("318", "General statistics of South America",bookCategoryService.getOne("310")));
						branchService.save( new Branch("319", "General statistics of other areas",bookCategoryService.getOne("310")));
						branchService.save( new Branch("320", "Political science (Politics and government)",bookCategoryService.getOne("320")));
						branchService.save( new Branch("321", "Systems of governments and states",bookCategoryService.getOne("320")));
						branchService.save( new Branch("322", "Relation of state to organized groups",bookCategoryService.getOne("320")));
						branchService.save( new Branch("323", "Civil and political rights",bookCategoryService.getOne("320")));
						branchService.save( new Branch("324", "The political process",bookCategoryService.getOne("320")));
						branchService.save( new Branch("325", "International migration and colonization",bookCategoryService.getOne("320")));
						branchService.save( new Branch("326", "Slavery and emancipation",bookCategoryService.getOne("320")));
						branchService.save( new Branch("327", "International relations",bookCategoryService.getOne("320")));
						branchService.save( new Branch("328", "The legislative process",bookCategoryService.getOne("320")));
						branchService.save( new Branch("329", "[Unassigned]",bookCategoryService.getOne("320")));
						branchService.save( new Branch("330", "Economics",bookCategoryService.getOne("330")));
						branchService.save( new Branch("331", "Labor economics",bookCategoryService.getOne("330")));
						branchService.save( new Branch("332", "Financial economics",bookCategoryService.getOne("330")));
						branchService.save( new Branch("333", "Economics of land and energy",bookCategoryService.getOne("330")));
						branchService.save( new Branch("334", "Cooperatives",bookCategoryService.getOne("330")));
						branchService.save( new Branch("335", "Socialism and related systems",bookCategoryService.getOne("330")));
						branchService.save( new Branch("336", "Public finance",bookCategoryService.getOne("330")));
						branchService.save( new Branch("337", "International economics",bookCategoryService.getOne("330")));
						branchService.save( new Branch("338", "Production",bookCategoryService.getOne("330")));
						branchService.save( new Branch("339", "Macroeconomics and related topics",bookCategoryService.getOne("330")));
						branchService.save( new Branch("340", "Law",bookCategoryService.getOne("340")));
						branchService.save( new Branch("341", "Law of nations",bookCategoryService.getOne("340")));
						branchService.save( new Branch("342", "Constitutional and administrative law",bookCategoryService.getOne("340")));
						branchService.save( new Branch("343", "Military, tax, trade & industrial law",bookCategoryService.getOne("340")));
						branchService.save( new Branch("344", "Labor, social, education & cultural law",bookCategoryService.getOne("340")));
						branchService.save( new Branch("345", "Criminal law",bookCategoryService.getOne("340")));
						branchService.save( new Branch("346", "Private law",bookCategoryService.getOne("340")));
						branchService.save( new Branch("347", "Procedure and courts",bookCategoryService.getOne("340")));
						branchService.save( new Branch("348", "Laws, regulations, cases",bookCategoryService.getOne("340")));
						branchService.save( new Branch("349", "Law of specific jurisdictions & areas",bookCategoryService.getOne("340")));
						branchService.save( new Branch("350", "Public administration and military science",bookCategoryService.getOne("350")));
						branchService.save( new Branch("351", "Public administration",bookCategoryService.getOne("350")));
						branchService.save( new Branch("352", "General considerations of public administration",bookCategoryService.getOne("350")));
						branchService.save( new Branch("353", "Specific fields of public administration",bookCategoryService.getOne("350")));
						branchService.save( new Branch("354", "Administration of economy & environment",bookCategoryService.getOne("350")));
						branchService.save( new Branch("355", "Military science",bookCategoryService.getOne("350")));
						branchService.save( new Branch("356", "Foot forces & warfare",bookCategoryService.getOne("350")));
						branchService.save( new Branch("357", "Mounted forces & warfare",bookCategoryService.getOne("350")));
						branchService.save( new Branch("358", "Air & other specialized forces",bookCategoryService.getOne("350")));
						branchService.save( new Branch("359", "Sea forces and warfare",bookCategoryService.getOne("350")));
						branchService.save( new Branch("360", "Social problems and services; associations",bookCategoryService.getOne("360")));
						branchService.save( new Branch("361", "Social problems and services",bookCategoryService.getOne("360")));
						branchService.save( new Branch("362", "Social problems and services to groups",bookCategoryService.getOne("360")));
						branchService.save( new Branch("363", "Other social problems and services",bookCategoryService.getOne("360")));
						branchService.save( new Branch("364", "Criminology",bookCategoryService.getOne("360")));
						branchService.save( new Branch("365", "Penal and related institutions",bookCategoryService.getOne("360")));
						branchService.save( new Branch("366", "Secret associations and societies",bookCategoryService.getOne("360")));
						branchService.save( new Branch("367", "General clubs",bookCategoryService.getOne("360")));
						branchService.save( new Branch("368", "Insurance",bookCategoryService.getOne("360")));
						branchService.save( new Branch("369", "Associations",bookCategoryService.getOne("360")));
						branchService.save( new Branch("370", "Education",bookCategoryService.getOne("370")));
						branchService.save( new Branch("371", "Schools and their activities; special education",bookCategoryService.getOne("370")));
						branchService.save( new Branch("372", "Primary education (Elementary education)",bookCategoryService.getOne("370")));
						branchService.save( new Branch("373", "Secondary education",bookCategoryService.getOne("370")));
						branchService.save( new Branch("374", "Adult education",bookCategoryService.getOne("370")));
						branchService.save( new Branch("375", "Curricula",bookCategoryService.getOne("370")));
						branchService.save( new Branch("376", "[Unassigned]",bookCategoryService.getOne("370")));
						branchService.save( new Branch("377", "[Unassigned]",bookCategoryService.getOne("370")));
						branchService.save( new Branch("378", "Higher education (Tertiary education)",bookCategoryService.getOne("370")));
						branchService.save( new Branch("379", "Public policy issues in education",bookCategoryService.getOne("370")));
						branchService.save( new Branch("380", "Commerce, communications, transportation",bookCategoryService.getOne("380")));
						branchService.save( new Branch("381", "Commerce (Trade)",bookCategoryService.getOne("380")));
						branchService.save( new Branch("382", "International commerce (Foreign trade)",bookCategoryService.getOne("380")));
						branchService.save( new Branch("383", "Postal communication",bookCategoryService.getOne("380")));
						branchService.save( new Branch("384", "Communications",bookCategoryService.getOne("380")));
						branchService.save( new Branch("385", "Railroad transportation",bookCategoryService.getOne("380")));
						branchService.save( new Branch("386", "Inland waterway and ferry transportation",bookCategoryService.getOne("380")));
						branchService.save( new Branch("387", "Water, air, space transportation",bookCategoryService.getOne("380")));
						branchService.save( new Branch("388", "Transportation",bookCategoryService.getOne("380")));
						branchService.save( new Branch("389", "Metrology and standardization",bookCategoryService.getOne("380")));
						branchService.save( new Branch("390", "Customs, etiquette, folklore",bookCategoryService.getOne("390")));
						branchService.save( new Branch("391", "Costume and personal appearance",bookCategoryService.getOne("390")));
						branchService.save( new Branch("392", "Customs of life cycle and domestic life",bookCategoryService.getOne("390")));
						branchService.save( new Branch("393", "Death customs",bookCategoryService.getOne("390")));
						branchService.save( new Branch("394", "General customs",bookCategoryService.getOne("390")));
						branchService.save( new Branch("395", "Etiquette (Manners)",bookCategoryService.getOne("390")));
						branchService.save( new Branch("396", "[Unassigned]",bookCategoryService.getOne("390")));
						branchService.save( new Branch("397", "[Unassigned]",bookCategoryService.getOne("390")));
						branchService.save( new Branch("398", "Folklore",bookCategoryService.getOne("390")));
						branchService.save( new Branch("399", "Customs of war and diplomacy",bookCategoryService.getOne("390")));
						branchService.save( new Branch("400", "Language",bookCategoryService.getOne("400")));
						branchService.save( new Branch("401", "Philosophy and theory",bookCategoryService.getOne("400")));
						branchService.save( new Branch("402", "Miscellany",bookCategoryService.getOne("400")));
						branchService.save( new Branch("403", "Dictionaries & encyclopedias",bookCategoryService.getOne("400")));
						branchService.save( new Branch("404", "Special topics of language",bookCategoryService.getOne("400")));
						branchService.save( new Branch("405", "Serial publications",bookCategoryService.getOne("400")));
						branchService.save( new Branch("406", "Organizations and management",bookCategoryService.getOne("400")));
						branchService.save( new Branch("407", "Education, research, related topics",bookCategoryService.getOne("400")));
						branchService.save( new Branch("408", "Groups of people",bookCategoryService.getOne("400")));
						branchService.save( new Branch("409", "Geographic treatment and biography",bookCategoryService.getOne("400")));
						branchService.save( new Branch("410", "Linguistics",bookCategoryService.getOne("410")));
						branchService.save( new Branch("411", "Writing systems",bookCategoryService.getOne("410")));
						branchService.save( new Branch("412", "Etymology",bookCategoryService.getOne("410")));
						branchService.save( new Branch("413", "Dictionaries",bookCategoryService.getOne("410")));
						branchService.save( new Branch("414", "Phonology & phonetics",bookCategoryService.getOne("410")));
						branchService.save( new Branch("415", "Grammar",bookCategoryService.getOne("410")));
						branchService.save( new Branch("416", "[Unassigned]",bookCategoryService.getOne("410")));
						branchService.save( new Branch("417", "Dialectology and historical linguistics",bookCategoryService.getOne("410")));
						branchService.save( new Branch("418", "Applied linguistics",bookCategoryService.getOne("410")));
						branchService.save( new Branch("419", "Sign languages",bookCategoryService.getOne("410")));
						branchService.save( new Branch("420", "English & Old English (Anglo-Saxon)",bookCategoryService.getOne("420")));
						branchService.save( new Branch("421", "Writing system, phonology, phonetics",bookCategoryService.getOne("420")));
						branchService.save( new Branch("422", "Etymology of standard English",bookCategoryService.getOne("420")));
						branchService.save( new Branch("423", "Dictionaries of standard English",bookCategoryService.getOne("420")));
						branchService.save( new Branch("424", "[Unassigned]",bookCategoryService.getOne("420")));
						branchService.save( new Branch("425", "Grammar of standard English",bookCategoryService.getOne("420")));
						branchService.save( new Branch("426", "[Unassigned]",bookCategoryService.getOne("420")));
						branchService.save( new Branch("427", "English language variations",bookCategoryService.getOne("420")));
						branchService.save( new Branch("428", "Standard English usage",bookCategoryService.getOne("420")));
						branchService.save( new Branch("429", "Old English (Anglo-Saxon)",bookCategoryService.getOne("420")));
						branchService.save( new Branch("430", "German and related languages",bookCategoryService.getOne("430")));
						branchService.save( new Branch("431", "Writing system, phonology, phonetics",bookCategoryService.getOne("430")));
						branchService.save( new Branch("432", "Etymology of standard German",bookCategoryService.getOne("430")));
						branchService.save( new Branch("433", "Dictionaries of standard German",bookCategoryService.getOne("430")));
						branchService.save( new Branch("434", "[Unassigned]",bookCategoryService.getOne("430")));
						branchService.save( new Branch("435", "Grammar of standard German",bookCategoryService.getOne("430")));
						branchService.save( new Branch("436", "[Unassigned]",bookCategoryService.getOne("430")));
						branchService.save( new Branch("437", "German language variations",bookCategoryService.getOne("430")));
						branchService.save( new Branch("438", "Standard German usage",bookCategoryService.getOne("430")));
						branchService.save( new Branch("439", "Other Germanic languages",bookCategoryService.getOne("430")));
						branchService.save( new Branch("440", "French & related Romance languages",bookCategoryService.getOne("440")));
						branchService.save( new Branch("441", "Writing system, phonology, phonetics",bookCategoryService.getOne("440")));
						branchService.save( new Branch("442", "Etymology of standard French",bookCategoryService.getOne("440")));
						branchService.save( new Branch("443", "Dictionaries of standard French",bookCategoryService.getOne("440")));
						branchService.save( new Branch("444", "[Unassigned]",bookCategoryService.getOne("440")));
						branchService.save( new Branch("445", "Grammar of standard French",bookCategoryService.getOne("440")));
						branchService.save( new Branch("446", "[Unassigned]",bookCategoryService.getOne("440")));
						branchService.save( new Branch("447", "French language variations",bookCategoryService.getOne("440")));
						branchService.save( new Branch("448", "Standard French usage",bookCategoryService.getOne("440")));
						branchService.save( new Branch("449", "Occitan, Catalan, Franco-Provençal",bookCategoryService.getOne("440")));
						branchService.save( new Branch("450", "Italian, Romanian & related languages",bookCategoryService.getOne("450")));
						branchService.save( new Branch("451", "Writing system, phonology, phonetics",bookCategoryService.getOne("450")));
						branchService.save( new Branch("452", "Etymology of standard Italian",bookCategoryService.getOne("450")));
						branchService.save( new Branch("453", "Dictionaries of standard Italian",bookCategoryService.getOne("450")));
						branchService.save( new Branch("454", "[Unassigned]",bookCategoryService.getOne("450")));
						branchService.save( new Branch("455", "Grammar of standard Italian",bookCategoryService.getOne("450")));
						branchService.save( new Branch("456", "[Unassigned]",bookCategoryService.getOne("450")));
						branchService.save( new Branch("457", "Italian language variations",bookCategoryService.getOne("450")));
						branchService.save( new Branch("458", "Standard Italian usage",bookCategoryService.getOne("450")));
						branchService.save( new Branch("459", "Romanian, Rhaetian, Sardinian, Corsican",bookCategoryService.getOne("450")));
						branchService.save( new Branch("460", "Spanish, Portuguese, Galician",bookCategoryService.getOne("460")));
						branchService.save( new Branch("461", "Writing system, phonology, phonetics",bookCategoryService.getOne("460")));
						branchService.save( new Branch("462", "Etymology of standard Spanish",bookCategoryService.getOne("460")));
						branchService.save( new Branch("463", "Dictionaries of standard Spanish",bookCategoryService.getOne("460")));
						branchService.save( new Branch("464", "[Unassigned]",bookCategoryService.getOne("460")));
						branchService.save( new Branch("465", "Grammar of standard Spanish",bookCategoryService.getOne("460")));
						branchService.save( new Branch("466", "[Unassigned]",bookCategoryService.getOne("460")));
						branchService.save( new Branch("467", "Spanish language variations",bookCategoryService.getOne("460")));
						branchService.save( new Branch("468", "Standard Spanish usage",bookCategoryService.getOne("460")));
						branchService.save( new Branch("469", "Portuguese",bookCategoryService.getOne("460")));
						branchService.save( new Branch("470", "Latin and related Italic languages",bookCategoryService.getOne("470")));
						branchService.save( new Branch("471", "Writing system, phonology, phonetics",bookCategoryService.getOne("470")));
						branchService.save( new Branch("472", "Etymology of classical Latin",bookCategoryService.getOne("470")));
						branchService.save( new Branch("473", "Dictionaries of classical Latin",bookCategoryService.getOne("470")));
						branchService.save( new Branch("474", "[Unassigned]",bookCategoryService.getOne("470")));
						branchService.save( new Branch("475", "Grammar of classical Latin",bookCategoryService.getOne("470")));
						branchService.save( new Branch("476", "[Unassigned]",bookCategoryService.getOne("470")));
						branchService.save( new Branch("477", "Old, postclassical, Vulgar Latin",bookCategoryService.getOne("470")));
						branchService.save( new Branch("478", "Classical Latin usage",bookCategoryService.getOne("470")));
						branchService.save( new Branch("479", "Other Italic languages",bookCategoryService.getOne("470")));
						branchService.save( new Branch("480", "Classical Greek; Hellenic languages",bookCategoryService.getOne("480")));
						branchService.save( new Branch("481", "Writing system, phonology, phonetics",bookCategoryService.getOne("480")));
						branchService.save( new Branch("482", "Etymology of classical Greek",bookCategoryService.getOne("480")));
						branchService.save( new Branch("483", "Dictionaries of classical Greek",bookCategoryService.getOne("480")));
						branchService.save( new Branch("484", "[Unassigned]",bookCategoryService.getOne("480")));
						branchService.save( new Branch("485", "Grammar of classical Greek",bookCategoryService.getOne("480")));
						branchService.save( new Branch("486", "[Unassigned]",bookCategoryService.getOne("480")));
						branchService.save( new Branch("487", "Preclassical and postclassical Greek",bookCategoryService.getOne("480")));
						branchService.save( new Branch("488", "Classical Greek usage",bookCategoryService.getOne("480")));
						branchService.save( new Branch("489", "Other Hellenic languages",bookCategoryService.getOne("480")));
						branchService.save( new Branch("490", "Other languages",bookCategoryService.getOne("490")));
						branchService.save( new Branch("491", "East Indo-European and Celtic languages",bookCategoryService.getOne("490")));
						branchService.save( new Branch("492", "Afro-Asiatic languages",bookCategoryService.getOne("490")));
						branchService.save( new Branch("493", "Non-Semitic Afro-Asiatic languages",bookCategoryService.getOne("490")));
						branchService.save( new Branch("494", "Altaic, Uralic, Hyperborean & Dravidian",bookCategoryService.getOne("490")));
						branchService.save( new Branch("495", "Languages of east and southeast Asia",bookCategoryService.getOne("490")));
						branchService.save( new Branch("496", "African languages",bookCategoryService.getOne("490")));
						branchService.save( new Branch("497", "North American native languages",bookCategoryService.getOne("490")));
						branchService.save( new Branch("498", "South American native languages",bookCategoryService.getOne("490")));
						branchService.save( new Branch("499", "Austronesian & other languages",bookCategoryService.getOne("490")));
						branchService.save( new Branch("500", "Natural sciences and mathematics",bookCategoryService.getOne("500")));
						branchService.save( new Branch("501", "Philosophy and theory",bookCategoryService.getOne("500")));
						branchService.save( new Branch("502", "Miscellany",bookCategoryService.getOne("500")));
						branchService.save( new Branch("503", "Dictionaries & encyclopedias",bookCategoryService.getOne("500")));
						branchService.save( new Branch("504", "[Unassigned]",bookCategoryService.getOne("500")));
						branchService.save( new Branch("505", "Serial publications",bookCategoryService.getOne("500")));
						branchService.save( new Branch("506", "Organizations and management",bookCategoryService.getOne("500")));
						branchService.save( new Branch("507", "Education, research, related topics",bookCategoryService.getOne("500")));
						branchService.save( new Branch("508", "Natural history",bookCategoryService.getOne("500")));
						branchService.save( new Branch("509", "History, geographic treatment, biography",bookCategoryService.getOne("500")));
						branchService.save( new Branch("510", "Mathematics",bookCategoryService.getOne("510")));
						branchService.save( new Branch("511", "General principles of mathematics",bookCategoryService.getOne("510")));
						branchService.save( new Branch("512", "Algebra",bookCategoryService.getOne("510")));
						branchService.save( new Branch("513", "Arithmetic",bookCategoryService.getOne("510")));
						branchService.save( new Branch("514", "Topology",bookCategoryService.getOne("510")));
						branchService.save( new Branch("515", "Analysis",bookCategoryService.getOne("510")));
						branchService.save( new Branch("516", "Geometry",bookCategoryService.getOne("510")));
						branchService.save( new Branch("517", "[Unassigned]",bookCategoryService.getOne("510")));
						branchService.save( new Branch("518", "Numerical analysis",bookCategoryService.getOne("510")));
						branchService.save( new Branch("519", "Probabilities and applied mathematics",bookCategoryService.getOne("510")));
						branchService.save( new Branch("520", "Astronomy and allied sciences",bookCategoryService.getOne("520")));
						branchService.save( new Branch("521", "Celestial mechanics",bookCategoryService.getOne("520")));
						branchService.save( new Branch("522", "Techniques, equipment & materials",bookCategoryService.getOne("520")));
						branchService.save( new Branch("523", "Specific celestial bodies and phenomena",bookCategoryService.getOne("520")));
						branchService.save( new Branch("524", "[Unassigned]",bookCategoryService.getOne("520")));
						branchService.save( new Branch("525", "Earth (Astronomical geography)",bookCategoryService.getOne("520")));
						branchService.save( new Branch("526", "Mathematical geography",bookCategoryService.getOne("520")));
						branchService.save( new Branch("527", "Celestial navigation",bookCategoryService.getOne("520")));
						branchService.save( new Branch("528", "Ephemerides",bookCategoryService.getOne("520")));
						branchService.save( new Branch("529", "Chronology",bookCategoryService.getOne("520")));
						branchService.save( new Branch("530", "Physics",bookCategoryService.getOne("530")));
						branchService.save( new Branch("531", "Classical mechanics",bookCategoryService.getOne("530")));
						branchService.save( new Branch("532", "Fluid mechanics",bookCategoryService.getOne("530")));
						branchService.save( new Branch("533", "Pneumatics (Gas mechanics)",bookCategoryService.getOne("530")));
						branchService.save( new Branch("534", "Sound and related vibrations",bookCategoryService.getOne("530")));
						branchService.save( new Branch("535", "Light and related radiation",bookCategoryService.getOne("530")));
						branchService.save( new Branch("536", "Heat",bookCategoryService.getOne("530")));
						branchService.save( new Branch("537", "Electricity and electronics",bookCategoryService.getOne("530")));
						branchService.save( new Branch("538", "Magnetism",bookCategoryService.getOne("530")));
						branchService.save( new Branch("539", "Modern physics",bookCategoryService.getOne("530")));
						branchService.save( new Branch("540", "Chemistry and allied sciences",bookCategoryService.getOne("540")));
						branchService.save( new Branch("541", "Physical chemistry",bookCategoryService.getOne("540")));
						branchService.save( new Branch("542", "Techniques, equipment & materials",bookCategoryService.getOne("540")));
						branchService.save( new Branch("543", "Analytical chemistry",bookCategoryService.getOne("540")));
						branchService.save( new Branch("544", "[Unassigned]",bookCategoryService.getOne("540")));
						branchService.save( new Branch("545", "[Unassigned]",bookCategoryService.getOne("540")));
						branchService.save( new Branch("546", "Inorganic chemistry",bookCategoryService.getOne("540")));
						branchService.save( new Branch("547", "Organic chemistry",bookCategoryService.getOne("540")));
						branchService.save( new Branch("548", "Crystallography",bookCategoryService.getOne("540")));
						branchService.save( new Branch("549", "Mineralogy",bookCategoryService.getOne("540")));
						branchService.save( new Branch("550", "Earth sciences",bookCategoryService.getOne("550")));
						branchService.save( new Branch("551", "Geology, hydrology, meteorology",bookCategoryService.getOne("550")));
						branchService.save( new Branch("552", "Petrology",bookCategoryService.getOne("550")));
						branchService.save( new Branch("553", "Economic geology",bookCategoryService.getOne("550")));
						branchService.save( new Branch("554", "Earth sciences of Europe",bookCategoryService.getOne("550")));
						branchService.save( new Branch("555", "Earth sciences of Asia",bookCategoryService.getOne("550")));
						branchService.save( new Branch("556", "Earth sciences of Africa",bookCategoryService.getOne("550")));
						branchService.save( new Branch("557", "Earth sciences of North America",bookCategoryService.getOne("550")));
						branchService.save( new Branch("558", "Earth sciences of South America",bookCategoryService.getOne("550")));
						branchService.save( new Branch("559", "Earth sciences of other areas",bookCategoryService.getOne("550")));
						branchService.save( new Branch("560", "Paleontology",bookCategoryService.getOne("560")));
						branchService.save( new Branch("561", "Paleobotany; fossil microorganisms",bookCategoryService.getOne("560")));
						branchService.save( new Branch("562", "Fossil invertebrates",bookCategoryService.getOne("560")));
						branchService.save( new Branch("563", "Fossil marine & seashore invertebrates",bookCategoryService.getOne("560")));
						branchService.save( new Branch("564", "Fossil Mollucas & Molluscoidea",bookCategoryService.getOne("560")));
						branchService.save( new Branch("565", "Fossil Arthropoda",bookCategoryService.getOne("560")));
						branchService.save( new Branch("566", "Fossil Chordata",bookCategoryService.getOne("560")));
						branchService.save( new Branch("567", "Fossil cold-blooded vertebrates",bookCategoryService.getOne("560")));
						branchService.save( new Branch("568", "Fossil Aves (birds)",bookCategoryService.getOne("560")));
						branchService.save( new Branch("569", "Fossil Mammalia",bookCategoryService.getOne("560")));
						branchService.save( new Branch("570", "Biology",bookCategoryService.getOne("570")));
						branchService.save( new Branch("571", "Physiology & related subjects",bookCategoryService.getOne("570")));
						branchService.save( new Branch("572", "Biochemistry",bookCategoryService.getOne("570")));
						branchService.save( new Branch("573", "Specific physiological systems in animals",bookCategoryService.getOne("570")));
						branchService.save( new Branch("574", "[Unassigned]",bookCategoryService.getOne("570")));
						branchService.save( new Branch("575", "Specific parts of & systems in plants",bookCategoryService.getOne("570")));
						branchService.save( new Branch("576", "Genetics and evolution",bookCategoryService.getOne("570")));
						branchService.save( new Branch("577", "Ecology",bookCategoryService.getOne("570")));
						branchService.save( new Branch("578", "Natural history of organisms",bookCategoryService.getOne("570")));
						branchService.save( new Branch("579", "Microorganisms, fungi & algae",bookCategoryService.getOne("570")));
						branchService.save( new Branch("580", "Plants",bookCategoryService.getOne("580")));
						branchService.save( new Branch("581", "Specific topics in natural history of plants",bookCategoryService.getOne("580")));
						branchService.save( new Branch("582", "Plants noted for characteristics & flowers",bookCategoryService.getOne("580")));
						branchService.save( new Branch("583", "Eudicots and Ceratophyllales",bookCategoryService.getOne("580")));
						branchService.save( new Branch("584", "Monocots, Chloranthales, magnoliids",bookCategoryService.getOne("580")));
						branchService.save( new Branch("585", "Pinophyta",bookCategoryService.getOne("580")));
						branchService.save( new Branch("586", "Cryptogamia",bookCategoryService.getOne("580")));
						branchService.save( new Branch("587", "Pteridophyta",bookCategoryService.getOne("580")));
						branchService.save( new Branch("588", "Bryophyta",bookCategoryService.getOne("580")));
						branchService.save( new Branch("589", "[Unassigned]",bookCategoryService.getOne("580")));
						branchService.save( new Branch("590", "Animals",bookCategoryService.getOne("590")));
						branchService.save( new Branch("591", "Specific topics in natural history of animals",bookCategoryService.getOne("590")));
						branchService.save( new Branch("592", "Invertebrates",bookCategoryService.getOne("590")));
						branchService.save( new Branch("593", "Marine & seashore invertebrates",bookCategoryService.getOne("590")));
						branchService.save( new Branch("594", "Mollusca and Molluscoidea",bookCategoryService.getOne("590")));
						branchService.save( new Branch("595", "Arthropoda",bookCategoryService.getOne("590")));
						branchService.save( new Branch("596", "Chordata",bookCategoryService.getOne("590")));
						branchService.save( new Branch("597", "Cold-blooded vertebrates",bookCategoryService.getOne("590")));
						branchService.save( new Branch("598", "Aves",bookCategoryService.getOne("590")));
						branchService.save( new Branch("599", "Mammalia",bookCategoryService.getOne("590")));
						branchService.save( new Branch("600", "Technology (Applied sciences)",bookCategoryService.getOne("600")));
						branchService.save( new Branch("601", "Philosophy and theory",bookCategoryService.getOne("600")));
						branchService.save( new Branch("602", "Miscellany",bookCategoryService.getOne("600")));
						branchService.save( new Branch("603", "Dictionaries, encyclopedias, concordances",bookCategoryService.getOne("600")));
						branchService.save( new Branch("604", "Technical drawing, hazardous materials",bookCategoryService.getOne("600")));
						branchService.save( new Branch("605", "Serial publications",bookCategoryService.getOne("600")));
						branchService.save( new Branch("606", "Organizations",bookCategoryService.getOne("600")));
						branchService.save( new Branch("607", "Education, research, related topics",bookCategoryService.getOne("600")));
						branchService.save( new Branch("608", "Patents",bookCategoryService.getOne("600")));
						branchService.save( new Branch("609", "History, geographic treatment, biography",bookCategoryService.getOne("600")));
						branchService.save( new Branch("610", "Medicine and health",bookCategoryService.getOne("610")));
						branchService.save( new Branch("611", "Human anatomy, cytology, histology",bookCategoryService.getOne("610")));
						branchService.save( new Branch("612", "Human physiology",bookCategoryService.getOne("610")));
						branchService.save( new Branch("613", "Personal health & safety",bookCategoryService.getOne("610")));
						branchService.save( new Branch("614", "Forensic medicine; incidence of disease",bookCategoryService.getOne("610")));
						branchService.save( new Branch("615", "Pharmacology and therapeutics",bookCategoryService.getOne("610")));
						branchService.save( new Branch("616", "Diseases",bookCategoryService.getOne("610")));
						branchService.save( new Branch("617", "Surgery & related medical specialties",bookCategoryService.getOne("610")));
						branchService.save( new Branch("618", "Gynecology, obstetrics, pediatrics, geriatrics",bookCategoryService.getOne("610")));
						branchService.save( new Branch("619", "[Unassigned]",bookCategoryService.getOne("610")));
						branchService.save( new Branch("620", "Engineering and allied operations",bookCategoryService.getOne("620")));
						branchService.save( new Branch("621", "Applied physics",bookCategoryService.getOne("620")));
						branchService.save( new Branch("622", "Mining and related operations",bookCategoryService.getOne("620")));
						branchService.save( new Branch("623", "Military and nautical engineering",bookCategoryService.getOne("620")));
						branchService.save( new Branch("624", "Civil engineering",bookCategoryService.getOne("620")));
						branchService.save( new Branch("625", "Engineering of railroads and roads",bookCategoryService.getOne("620")));
						branchService.save( new Branch("626", "[Unassigned]",bookCategoryService.getOne("620")));
						branchService.save( new Branch("627", "Hydraulic engineering",bookCategoryService.getOne("620")));
						branchService.save( new Branch("628", "Sanitary engineering",bookCategoryService.getOne("620")));
						branchService.save( new Branch("629", "Other branches of engineering",bookCategoryService.getOne("620")));
						branchService.save( new Branch("630", "Agriculture and related technologies",bookCategoryService.getOne("630")));
						branchService.save( new Branch("631", "Techniques, equipment & materials",bookCategoryService.getOne("630")));
						branchService.save( new Branch("632", "Plant injuries, diseases, pests",bookCategoryService.getOne("630")));
						branchService.save( new Branch("633", "Field and plantation crops",bookCategoryService.getOne("630")));
						branchService.save( new Branch("634", "Orchards, fruits, forestry",bookCategoryService.getOne("630")));
						branchService.save( new Branch("635", "Garden crops (Horticulture)",bookCategoryService.getOne("630")));
						branchService.save( new Branch("636", "Animal husbandry",bookCategoryService.getOne("630")));
						branchService.save( new Branch("637", "Processing dairy and related products",bookCategoryService.getOne("630")));
						branchService.save( new Branch("638", "Insect culture",bookCategoryService.getOne("630")));
						branchService.save( new Branch("639", "Hunting, fishing & conservation",bookCategoryService.getOne("630")));
						branchService.save( new Branch("640", "Home and family management",bookCategoryService.getOne("640")));
						branchService.save( new Branch("641", "Food and drink",bookCategoryService.getOne("640")));
						branchService.save( new Branch("642", "Meals and table service",bookCategoryService.getOne("640")));
						branchService.save( new Branch("643", "Housing and household equipment",bookCategoryService.getOne("640")));
						branchService.save( new Branch("644", "Household utilities",bookCategoryService.getOne("640")));
						branchService.save( new Branch("645", "Household furnishings",bookCategoryService.getOne("640")));
						branchService.save( new Branch("646", "Sewing, clothing & personal living",bookCategoryService.getOne("640")));
						branchService.save( new Branch("647", "Management of public households",bookCategoryService.getOne("640")));
						branchService.save( new Branch("648", "Housekeeping",bookCategoryService.getOne("640")));
						branchService.save( new Branch("649", "Child rearing & home care of people",bookCategoryService.getOne("640")));
						branchService.save( new Branch("650", "Management and auxiliary services",bookCategoryService.getOne("650")));
						branchService.save( new Branch("651", "Office services",bookCategoryService.getOne("650")));
						branchService.save( new Branch("652", "Processes of written communication",bookCategoryService.getOne("650")));
						branchService.save( new Branch("653", "Shorthand",bookCategoryService.getOne("650")));
						branchService.save( new Branch("654", "[Unassigned]",bookCategoryService.getOne("650")));
						branchService.save( new Branch("655", "[Unassigned]",bookCategoryService.getOne("650")));
						branchService.save( new Branch("656 ", "[Unassigned]",bookCategoryService.getOne("650")));
						branchService.save( new Branch("657", "Accounting",bookCategoryService.getOne("650")));
						branchService.save( new Branch("658", "General management",bookCategoryService.getOne("650")));
						branchService.save( new Branch("659", "Advertising and public relations",bookCategoryService.getOne("650")));
						branchService.save( new Branch("660", "Chemical engineering",bookCategoryService.getOne("660")));
						branchService.save( new Branch("661", "Technology of industrial chemicals",bookCategoryService.getOne("660")));
						branchService.save( new Branch("662", "Explosives, fuels & related products",bookCategoryService.getOne("660")));
						branchService.save( new Branch("663", "Beverage technology",bookCategoryService.getOne("660")));
						branchService.save( new Branch("664", "Food technology",bookCategoryService.getOne("660")));
						branchService.save( new Branch("665", "Industrial oils, fats, waxes & gases",bookCategoryService.getOne("660")));
						branchService.save( new Branch("666", "Ceramic & allied technologies",bookCategoryService.getOne("660")));
						branchService.save( new Branch("667", "Cleaning, color & coating technologies",bookCategoryService.getOne("660")));
						branchService.save( new Branch("668", "Technology of other organic products",bookCategoryService.getOne("660")));
						branchService.save( new Branch("669", "Metallurgy",bookCategoryService.getOne("660")));
						branchService.save( new Branch("670", "Manufacturing",bookCategoryService.getOne("670")));
						branchService.save( new Branch("671", "Metalworking & primary metal products",bookCategoryService.getOne("670")));
						branchService.save( new Branch("672", "Iron, steel, other iron alloys",bookCategoryService.getOne("670")));
						branchService.save( new Branch("673", "Nonferrous metals",bookCategoryService.getOne("670")));
						branchService.save( new Branch("674", "Lumber processing, wood products, cork",bookCategoryService.getOne("670")));
						branchService.save( new Branch("675", "Leather and fur processing",bookCategoryService.getOne("670")));
						branchService.save( new Branch("676", "Pulp and paper technology",bookCategoryService.getOne("670")));
						branchService.save( new Branch("677", "Textiles",bookCategoryService.getOne("670")));
						branchService.save( new Branch("678", "Elastomers and elastomer products",bookCategoryService.getOne("670")));
						branchService.save( new Branch("679", "Other products of specific materials",bookCategoryService.getOne("670")));
						branchService.save( new Branch("680", "Manufacture of products for specific uses",bookCategoryService.getOne("680")));
						branchService.save( new Branch("681", "Precision instruments and other devices",bookCategoryService.getOne("680")));
						branchService.save( new Branch("682", "Small forge work (Blacksmithing)",bookCategoryService.getOne("680")));
						branchService.save( new Branch("683", "Hardware & household appliances",bookCategoryService.getOne("680")));
						branchService.save( new Branch("684", "Furnishings and home workshops",bookCategoryService.getOne("680")));
						branchService.save( new Branch("685", "Leather, fur goods & related products",bookCategoryService.getOne("680")));
						branchService.save( new Branch("686", "Printing and related activities",bookCategoryService.getOne("680")));
						branchService.save( new Branch("687", "Clothing and accessories",bookCategoryService.getOne("680")));
						branchService.save( new Branch("688", "Other final products & packaging",bookCategoryService.getOne("680")));
						branchService.save( new Branch("689", "[Unassigned]",bookCategoryService.getOne("680")));
						branchService.save( new Branch("690", "Construction of buildings",bookCategoryService.getOne("690")));
						branchService.save( new Branch("691", "Building materials",bookCategoryService.getOne("690")));
						branchService.save( new Branch("692", "Auxiliary construction practices",bookCategoryService.getOne("690")));
						branchService.save( new Branch("693", "Specific materials & purposes",bookCategoryService.getOne("690")));
						branchService.save( new Branch("694", "Wood construction",bookCategoryService.getOne("690")));
						branchService.save( new Branch("695", "Roof covering",bookCategoryService.getOne("690")));
						branchService.save( new Branch("696", "Utilities",bookCategoryService.getOne("690")));
						branchService.save( new Branch("697", "Heating, ventilating & air-conditioning",bookCategoryService.getOne("690")));
						branchService.save( new Branch("698", "Detail finishing",bookCategoryService.getOne("690")));
						branchService.save( new Branch("699", "[Unassigned]",bookCategoryService.getOne("690")));
						branchService.save( new Branch("700", "The arts",bookCategoryService.getOne("700")));
						branchService.save( new Branch("701", "Philosophy of fine & decorative arts",bookCategoryService.getOne("700")));
						branchService.save( new Branch("702", "Miscellany of fine and decorative arts",bookCategoryService.getOne("700")));
						branchService.save( new Branch("703", "Dictionaries of fine & decorative arts",bookCategoryService.getOne("700")));
						branchService.save( new Branch("704", "Special topics in fine and decorative arts",bookCategoryService.getOne("700")));
						branchService.save( new Branch("705", "Serial publications of fine & decorative arts",bookCategoryService.getOne("700")));
						branchService.save( new Branch("706", "Organizations & management",bookCategoryService.getOne("700")));
						branchService.save( new Branch("707", "Education, research & related topics",bookCategoryService.getOne("700")));
						branchService.save( new Branch("708", "Galleries, museums & private collections",bookCategoryService.getOne("700")));
						branchService.save( new Branch("709", "History, geographic treatment, biography",bookCategoryService.getOne("700")));
						branchService.save( new Branch("710", "Area planning and landscape architecture",bookCategoryService.getOne("710")));
						branchService.save( new Branch("711", "Area planning (Civic art)",bookCategoryService.getOne("710")));
						branchService.save( new Branch("712", "Landscape architecture (Landscape design)",bookCategoryService.getOne("710")));
						branchService.save( new Branch("713", "Landscape architecture of trafficways",bookCategoryService.getOne("710")));
						branchService.save( new Branch("714", "Water features in landscape architecture",bookCategoryService.getOne("710")));
						branchService.save( new Branch("715", "Woody plants in landscape architecture",bookCategoryService.getOne("710")));
						branchService.save( new Branch("716", "Herbaceous plants",bookCategoryService.getOne("710")));
						branchService.save( new Branch("717", "Structures in landscape architecture",bookCategoryService.getOne("710")));
						branchService.save( new Branch("718", "Landscape design of cemeteries",bookCategoryService.getOne("710")));
						branchService.save( new Branch("719", "Natural landscapes",bookCategoryService.getOne("710")));
						branchService.save( new Branch("720", "Architecture",bookCategoryService.getOne("720")));
						branchService.save( new Branch("721", "Architectural materials and structure",bookCategoryService.getOne("720")));
						branchService.save( new Branch("722", "Architecture from earliest times to ca. 300",bookCategoryService.getOne("720")));
						branchService.save( new Branch("723", "Architecture from ca. 300 to 1399",bookCategoryService.getOne("720")));
						branchService.save( new Branch("724", "Architecture from 1400",bookCategoryService.getOne("720")));
						branchService.save( new Branch("725", "Public structures",bookCategoryService.getOne("720")));
						branchService.save( new Branch("726", "Buildings for religious and related purposes",bookCategoryService.getOne("720")));
						branchService.save( new Branch("727", "Buildings for education & research",bookCategoryService.getOne("720")));
						branchService.save( new Branch("728", "Residential and related buildings",bookCategoryService.getOne("720")));
						branchService.save( new Branch("729", "Design & decoration",bookCategoryService.getOne("720")));
						branchService.save( new Branch("730", "Sculpture and related arts",bookCategoryService.getOne("730")));
						branchService.save( new Branch("731", "Processes, forms, subjects of sculpture",bookCategoryService.getOne("730")));
						branchService.save( new Branch("732", "Sculpture to ca. 500",bookCategoryService.getOne("730")));
						branchService.save( new Branch("733", "Greek, Etruscan, Roman sculpture",bookCategoryService.getOne("730")));
						branchService.save( new Branch("734", "Sculpture from ca. 500 to 1399",bookCategoryService.getOne("730")));
						branchService.save( new Branch("735", "Sculpture from 1400",bookCategoryService.getOne("730")));
						branchService.save( new Branch("736", "Carving and carvings",bookCategoryService.getOne("730")));
						branchService.save( new Branch("737", "Numismatics and sigillography",bookCategoryService.getOne("730")));
						branchService.save( new Branch("738", "Ceramic arts",bookCategoryService.getOne("730")));
						branchService.save( new Branch("739", "Art metalwork",bookCategoryService.getOne("730")));
						branchService.save( new Branch("740", "Graphic arts and decorative arts",bookCategoryService.getOne("740")));
						branchService.save( new Branch("741", "Drawing and drawings",bookCategoryService.getOne("740")));
						branchService.save( new Branch("742", "Perspective in drawing",bookCategoryService.getOne("740")));
						branchService.save( new Branch("743", "Drawing and drawings by subject",bookCategoryService.getOne("740")));
						branchService.save( new Branch("744", "[Unassigned]",bookCategoryService.getOne("740")));
						branchService.save( new Branch("745", "Decorative arts",bookCategoryService.getOne("740")));
						branchService.save( new Branch("746", "Textile arts",bookCategoryService.getOne("740")));
						branchService.save( new Branch("747", "Interior decoration",bookCategoryService.getOne("740")));
						branchService.save( new Branch("748", "Glass",bookCategoryService.getOne("740")));
						branchService.save( new Branch("749", "Furniture and accessories",bookCategoryService.getOne("740")));
						branchService.save( new Branch("750", "Painting and paintings",bookCategoryService.getOne("750")));
						branchService.save( new Branch("751", "Techniques, equipment, materials & forms",bookCategoryService.getOne("750")));
						branchService.save( new Branch("752", "Color",bookCategoryService.getOne("750")));
						branchService.save( new Branch("753", "Symbolism, allegory, mythology, legend",bookCategoryService.getOne("750")));
						branchService.save( new Branch("754", "Genre paintings",bookCategoryService.getOne("750")));
						branchService.save( new Branch("755", "Religion",bookCategoryService.getOne("750")));
						branchService.save( new Branch("756", "[Unassigned]",bookCategoryService.getOne("750")));
						branchService.save( new Branch("757", "Human figures",bookCategoryService.getOne("750")));
						branchService.save( new Branch("758", "Nature, cityscapes & other subjects",bookCategoryService.getOne("750")));
						branchService.save( new Branch("759", "History, geographic treatment, biography",bookCategoryService.getOne("750")));
						branchService.save( new Branch("760", "Printmaking & prints",bookCategoryService.getOne("760")));
						branchService.save( new Branch("761", "Relief processes (Block printing)",bookCategoryService.getOne("760")));
						branchService.save( new Branch("762", "[Unassigned]",bookCategoryService.getOne("760")));
						branchService.save( new Branch("763", "Lithographic processes",bookCategoryService.getOne("760")));
						branchService.save( new Branch("764", "Chromolithography and serigraphy",bookCategoryService.getOne("760")));
						branchService.save( new Branch("765", "Metal engraving",bookCategoryService.getOne("760")));
						branchService.save( new Branch("766", "Mezzotinting, aquatinting, related processes",bookCategoryService.getOne("760")));
						branchService.save( new Branch("767", "Etching and drypoint",bookCategoryService.getOne("760")));
						branchService.save( new Branch("768", "[Unassigned]",bookCategoryService.getOne("760")));
						branchService.save( new Branch("769", "Prints",bookCategoryService.getOne("760")));
						branchService.save( new Branch("770", "Photography, computer art, cinematography",bookCategoryService.getOne("770")));
						branchService.save( new Branch("771", "Techniques, equipment & materials",bookCategoryService.getOne("770")));
						branchService.save( new Branch("772", "Metallic salt processes",bookCategoryService.getOne("770")));
						branchService.save( new Branch("773", "Pigment processes of printing",bookCategoryService.getOne("770")));
						branchService.save( new Branch("774", "Holography",bookCategoryService.getOne("770")));
						branchService.save( new Branch("775", "[Unassigned]",bookCategoryService.getOne("770")));
						branchService.save( new Branch("776", "Computer art (Digital art)",bookCategoryService.getOne("770")));
						branchService.save( new Branch("777", "Cinematography and videography",bookCategoryService.getOne("770")));
						branchService.save( new Branch("778", "Specific fields & kinds of photography",bookCategoryService.getOne("770")));
						branchService.save( new Branch("779", "Photographic images",bookCategoryService.getOne("770")));
						branchService.save( new Branch("780", "Music",bookCategoryService.getOne("780")));
						branchService.save( new Branch("781", "General principles and musical forms",bookCategoryService.getOne("780")));
						branchService.save( new Branch("782", "Vocal music",bookCategoryService.getOne("780")));
						branchService.save( new Branch("783", "Music for single voices",bookCategoryService.getOne("780")));
						branchService.save( new Branch("784", "Instruments & instrumental ensembles",bookCategoryService.getOne("780")));
						branchService.save( new Branch("785", "Ensembles with one instrument per part",bookCategoryService.getOne("780")));
						branchService.save( new Branch("786", "Keyboard & other instruments",bookCategoryService.getOne("780")));
						branchService.save( new Branch("787", "Stringed instruments (Chordophones)",bookCategoryService.getOne("780")));
						branchService.save( new Branch("788", "Wind instruments (Aerophones)",bookCategoryService.getOne("780")));
						branchService.save( new Branch("789", "(Optional number)",bookCategoryService.getOne("780")));
						branchService.save( new Branch("790", "Recreational and performing arts",bookCategoryService.getOne("790")));
						branchService.save( new Branch("791", "Public performances",bookCategoryService.getOne("790")));
						branchService.save( new Branch("792", "Stage presentations",bookCategoryService.getOne("790")));
						branchService.save( new Branch("793", "Indoor games and amusements",bookCategoryService.getOne("790")));
						branchService.save( new Branch("794", "Indoor games of skill",bookCategoryService.getOne("790")));
						branchService.save( new Branch("795", "Games of chance",bookCategoryService.getOne("790")));
						branchService.save( new Branch("796", "Athletic and outdoor sports and games",bookCategoryService.getOne("790")));
						branchService.save( new Branch("797", "Aquatic and air sports",bookCategoryService.getOne("790")));
						branchService.save( new Branch("798", "Equestrian sports and animal racing",bookCategoryService.getOne("790")));
						branchService.save( new Branch("799", "Fishing, hunting, shooting",bookCategoryService.getOne("790")));
						branchService.save( new Branch("800", "Literature (Belles-lettres) and rhetoric",bookCategoryService.getOne("800")));
						branchService.save( new Branch("801", "Philosophy and theory",bookCategoryService.getOne("800")));
						branchService.save( new Branch("802", "Miscellany",bookCategoryService.getOne("800")));
						branchService.save( new Branch("803", "Dictionaries & encyclopedias",bookCategoryService.getOne("800")));
						branchService.save( new Branch("804", "[Unassigned]",bookCategoryService.getOne("800")));
						branchService.save( new Branch("805", "Serial publications",bookCategoryService.getOne("800")));
						branchService.save( new Branch("806", "Organizations and management",bookCategoryService.getOne("800")));
						branchService.save( new Branch("807", "Education, research, related topics",bookCategoryService.getOne("800")));
						branchService.save( new Branch("808", "Rhetoric & collections of literature",bookCategoryService.getOne("800")));
						branchService.save( new Branch("809", "History, description & criticism",bookCategoryService.getOne("800")));
						branchService.save( new Branch("810", "American literature in English",bookCategoryService.getOne("810")));
						branchService.save( new Branch("811", "American poetry in English",bookCategoryService.getOne("810")));
						branchService.save( new Branch("812", "American drama in English",bookCategoryService.getOne("810")));
						branchService.save( new Branch("813", "American fiction in English",bookCategoryService.getOne("810")));
						branchService.save( new Branch("814", "American essays in English",bookCategoryService.getOne("810")));
						branchService.save( new Branch("815", "American speeches in English",bookCategoryService.getOne("810")));
						branchService.save( new Branch("816", "American letters in English",bookCategoryService.getOne("810")));
						branchService.save( new Branch("817", "American humor and satire in English",bookCategoryService.getOne("810")));
						branchService.save( new Branch("818", "American miscellaneous writings",bookCategoryService.getOne("810")));
						branchService.save( new Branch("819", "(Optional number)",bookCategoryService.getOne("810")));
						branchService.save( new Branch("820", "English & Old English literatures",bookCategoryService.getOne("820")));
						branchService.save( new Branch("821", "English poetry",bookCategoryService.getOne("820")));
						branchService.save( new Branch("822", "English drama",bookCategoryService.getOne("820")));
						branchService.save( new Branch("823", "English fiction",bookCategoryService.getOne("820")));
						branchService.save( new Branch("824", "English essays",bookCategoryService.getOne("820")));
						branchService.save( new Branch("825", "English speeches",bookCategoryService.getOne("820")));
						branchService.save( new Branch("826", "English letters",bookCategoryService.getOne("820")));
						branchService.save( new Branch("827", "English humor and satire",bookCategoryService.getOne("820")));
						branchService.save( new Branch("828", "English miscellaneous writings",bookCategoryService.getOne("820")));
						branchService.save( new Branch("829", "Old English (Anglo-Saxon) literature",bookCategoryService.getOne("820")));
						branchService.save( new Branch("830", "Literatures of Germanic languages",bookCategoryService.getOne("830")));
						branchService.save( new Branch("831", "German poetry",bookCategoryService.getOne("830")));
						branchService.save( new Branch("832", "German drama",bookCategoryService.getOne("830")));
						branchService.save( new Branch("833", "German fiction",bookCategoryService.getOne("830")));
						branchService.save( new Branch("834", "German essays",bookCategoryService.getOne("830")));
						branchService.save( new Branch("835", "German speeches",bookCategoryService.getOne("830")));
						branchService.save( new Branch("836", "German letters",bookCategoryService.getOne("830")));
						branchService.save( new Branch("837", "German humor and satire",bookCategoryService.getOne("830")));
						branchService.save( new Branch("838", "German miscellaneous writings",bookCategoryService.getOne("830")));
						branchService.save( new Branch("839", "Other Germanic literatures",bookCategoryService.getOne("830")));
						branchService.save( new Branch("840", "Literatures of Romance languages",bookCategoryService.getOne("840")));
						branchService.save( new Branch("841", "French poetry",bookCategoryService.getOne("840")));
						branchService.save( new Branch("842", "French drama",bookCategoryService.getOne("840")));
						branchService.save( new Branch("843", "French fiction",bookCategoryService.getOne("840")));
						branchService.save( new Branch("844", "French essays",bookCategoryService.getOne("840")));
						branchService.save( new Branch("845", "French speeches",bookCategoryService.getOne("840")));
						branchService.save( new Branch("846", "French letters",bookCategoryService.getOne("840")));
						branchService.save( new Branch("847", "French humor and satire",bookCategoryService.getOne("840")));
						branchService.save( new Branch("848", "French miscellaneous writings",bookCategoryService.getOne("840")));
						branchService.save( new Branch("849", "Occitan, Catalan, Franco-Provençal",bookCategoryService.getOne("840")));
						branchService.save( new Branch("850", "Italian, Romanian & related literatures",bookCategoryService.getOne("850")));
						branchService.save( new Branch("851", "Italian poetry",bookCategoryService.getOne("850")));
						branchService.save( new Branch("852", "Italian drama",bookCategoryService.getOne("850")));
						branchService.save( new Branch("853", "Italian fiction",bookCategoryService.getOne("850")));
						branchService.save( new Branch("854", "Italian essays",bookCategoryService.getOne("850")));
						branchService.save( new Branch("855", "Italian speeches",bookCategoryService.getOne("850")));
						branchService.save( new Branch("856", "Italian letters",bookCategoryService.getOne("850")));
						branchService.save( new Branch("857", "Italian humor and satire",bookCategoryService.getOne("850")));
						branchService.save( new Branch("858", "Italian miscellaneous writings",bookCategoryService.getOne("850")));
						branchService.save( new Branch("859", "Romanian & related literatures",bookCategoryService.getOne("850")));
						branchService.save( new Branch("860", "Spanish & Portuguese literatures",bookCategoryService.getOne("860")));
						branchService.save( new Branch("861", "Spanish poetry",bookCategoryService.getOne("860")));
						branchService.save( new Branch("862", "Spanish drama",bookCategoryService.getOne("860")));
						branchService.save( new Branch("863", "Spanish fiction",bookCategoryService.getOne("860")));
						branchService.save( new Branch("864", "Spanish essays",bookCategoryService.getOne("860")));
						branchService.save( new Branch("865", "Spanish speeches",bookCategoryService.getOne("860")));
						branchService.save( new Branch("866", "Spanish letters",bookCategoryService.getOne("860")));
						branchService.save( new Branch("867", "Spanish humor and satire",bookCategoryService.getOne("860")));
						branchService.save( new Branch("868", "Spanish miscellaneous writings",bookCategoryService.getOne("860")));
						branchService.save( new Branch("869", "Portuguese and Galician literatures",bookCategoryService.getOne("860")));
						branchService.save( new Branch("870", "Latin & related Italic literatures",bookCategoryService.getOne("870")));
						branchService.save( new Branch("871", "Latin poetry",bookCategoryService.getOne("870")));
						branchService.save( new Branch("872", "Latin dramatic poetry and drama",bookCategoryService.getOne("870")));
						branchService.save( new Branch("873", "Latin epic poetry and fiction",bookCategoryService.getOne("870")));
						branchService.save( new Branch("874", "Latin lyric poetry",bookCategoryService.getOne("870")));
						branchService.save( new Branch("875", "Latin speeches",bookCategoryService.getOne("870")));
						branchService.save( new Branch("876", "Latin letters",bookCategoryService.getOne("870")));
						branchService.save( new Branch("877", "Latin humor and satire",bookCategoryService.getOne("870")));
						branchService.save( new Branch("878", "Latin miscellaneous writings",bookCategoryService.getOne("870")));
						branchService.save( new Branch("879", "Literatures of other Italic languages",bookCategoryService.getOne("870")));
						branchService.save( new Branch("880", "Classical Greek & Hellenic literatures",bookCategoryService.getOne("880")));
						branchService.save( new Branch("881", "Classical Greek poetry",bookCategoryService.getOne("880")));
						branchService.save( new Branch("882", "Classical Greek dramatic poetry & drama",bookCategoryService.getOne("880")));
						branchService.save( new Branch("883", "Classical Greek epic poetry and fiction",bookCategoryService.getOne("880")));
						branchService.save( new Branch("884", "Classical Greek lyric poetry",bookCategoryService.getOne("880")));
						branchService.save( new Branch("885", "Classical Greek speeches",bookCategoryService.getOne("880")));
						branchService.save( new Branch("886", "Classical Greek letters",bookCategoryService.getOne("880")));
						branchService.save( new Branch("887", "Classical Greek humor and satire",bookCategoryService.getOne("880")));
						branchService.save( new Branch("888", "Classical Greek miscellaneous writings",bookCategoryService.getOne("880")));
						branchService.save( new Branch("889", "Modern Greek literature",bookCategoryService.getOne("880")));
						branchService.save( new Branch("890", "Literatures of other languages",bookCategoryService.getOne("890")));
						branchService.save( new Branch("891", "East Indo-European and Celtic literatures",bookCategoryService.getOne("890")));
						branchService.save( new Branch("892", "Afro-Asiatic literatures",bookCategoryService.getOne("890")));
						branchService.save( new Branch("893", "Non-Semitic Afro-Asiatic literatures",bookCategoryService.getOne("890")));
						branchService.save( new Branch("894", "Altaic, Uralic, Hyperborean & Dravidian",bookCategoryService.getOne("890")));
						branchService.save( new Branch("895", "Literatures of East and Southeast Asia",bookCategoryService.getOne("890")));
						branchService.save( new Branch("896", "African literatures",bookCategoryService.getOne("890")));
						branchService.save( new Branch("897", "North American native literatures",bookCategoryService.getOne("890")));
						branchService.save( new Branch("898", "South American native literatures",bookCategoryService.getOne("890")));
						branchService.save( new Branch("899", "Austronesian & other literatures",bookCategoryService.getOne("890")));
						branchService.save( new Branch("900", "History & geography",bookCategoryService.getOne("900")));
						branchService.save( new Branch("901", "Philosophy and theory of history",bookCategoryService.getOne("900")));
						branchService.save( new Branch("902", "Miscellany of history",bookCategoryService.getOne("900")));
						branchService.save( new Branch("903", "Dictionaries & encyclopedias",bookCategoryService.getOne("900")));
						branchService.save( new Branch("904", "Collected accounts of events",bookCategoryService.getOne("900")));
						branchService.save( new Branch("905", "Serial publications of history",bookCategoryService.getOne("900")));
						branchService.save( new Branch("906", "Organizations & management",bookCategoryService.getOne("900")));
						branchService.save( new Branch("907", "Education, research & related topics",bookCategoryService.getOne("900")));
						branchService.save( new Branch("908", "Groups of people",bookCategoryService.getOne("900")));
						branchService.save( new Branch("909", "World history",bookCategoryService.getOne("900")));
						branchService.save( new Branch("910", "Geography and travel",bookCategoryService.getOne("910")));
						branchService.save( new Branch("911", "Historical geography",bookCategoryService.getOne("910")));
						branchService.save( new Branch("912", "Maps and plans of surface of earth",bookCategoryService.getOne("910")));
						branchService.save( new Branch("913", "Geography of & travel in ancient world",bookCategoryService.getOne("910")));
						branchService.save( new Branch("914", "Geography of and travel in Europe",bookCategoryService.getOne("910")));
						branchService.save( new Branch("915", "Geography of and travel in Asia",bookCategoryService.getOne("910")));
						branchService.save( new Branch("916", "Geography of and travel in Africa",bookCategoryService.getOne("910")));
						branchService.save( new Branch("917", "Geography of & travel in North America",bookCategoryService.getOne("910")));
						branchService.save( new Branch("918", "Geography of & travel in South America",bookCategoryService.getOne("910")));
						branchService.save( new Branch("919", "Geography of and travel in other areas",bookCategoryService.getOne("910")));
						branchService.save( new Branch("920", "Biography, genealogy, insignia",bookCategoryService.getOne("920")));
						branchService.save( new Branch("921", "(Optional number) ",bookCategoryService.getOne("920")));
						branchService.save( new Branch("922", "(Optional number)",bookCategoryService.getOne("920")));
						branchService.save( new Branch("923", "(Optional number)",bookCategoryService.getOne("920")));
						branchService.save( new Branch("924", "(Optional number)",bookCategoryService.getOne("920")));
						branchService.save( new Branch("925", "(Optional number)",bookCategoryService.getOne("920")));
						branchService.save( new Branch("926", "(Optional number)",bookCategoryService.getOne("920")));
						branchService.save( new Branch("927", "(Optional number)",bookCategoryService.getOne("920")));
						branchService.save( new Branch("928", "(Optional number)",bookCategoryService.getOne("920")));
						branchService.save( new Branch("929", "Genealogy, names & insignia",bookCategoryService.getOne("920")));
						branchService.save( new Branch("930", "History of ancient world to ca. 499",bookCategoryService.getOne("930")));
						branchService.save( new Branch("931", "China to 420",bookCategoryService.getOne("930")));
						branchService.save( new Branch("932", "Egypt to 640",bookCategoryService.getOne("930")));
						branchService.save( new Branch("933", "Palestine to 70",bookCategoryService.getOne("930")));
						branchService.save( new Branch("934", "India to 647",bookCategoryService.getOne("930")));
						branchService.save( new Branch("935", "Mesopotamia & Iranian Plateau to 637",bookCategoryService.getOne("930")));
						branchService.save( new Branch("936", "Europe north & west of Italy to ca. 499",bookCategoryService.getOne("930")));
						branchService.save( new Branch("937", "Italy & adjacent territories to 476",bookCategoryService.getOne("930")));
						branchService.save( new Branch("938", "Greece to 323",bookCategoryService.getOne("930")));
						branchService.save( new Branch("939", "Other parts of ancient world",bookCategoryService.getOne("930")));
						branchService.save( new Branch("940", "History of Europe",bookCategoryService.getOne("940")));
						branchService.save( new Branch("941", "British Isles",bookCategoryService.getOne("940")));
						branchService.save( new Branch("942", "England and Wales",bookCategoryService.getOne("940")));
						branchService.save( new Branch("943", "Germany & central Europe",bookCategoryService.getOne("940")));
						branchService.save( new Branch("944", "France and Monaco",bookCategoryService.getOne("940")));
						branchService.save( new Branch("945", "Italy, San Marino, Vatican City, Malta",bookCategoryService.getOne("940")));
						branchService.save( new Branch("946", "Spain, Andorra, Gibraltar, Portugal",bookCategoryService.getOne("940")));
						branchService.save( new Branch("947", "Russia & east Europe",bookCategoryService.getOne("940")));
						branchService.save( new Branch("948", "Scandinavia and Finland",bookCategoryService.getOne("940")));
						branchService.save( new Branch("949", "Other parts of Europe",bookCategoryService.getOne("940")));
						branchService.save( new Branch("950", "History of Asia",bookCategoryService.getOne("950")));
						branchService.save( new Branch("951", "China and adjacent areas",bookCategoryService.getOne("950")));
						branchService.save( new Branch("952", "Japan",bookCategoryService.getOne("950")));
						branchService.save( new Branch("953", "Arabian Peninsula and adjacent areas",bookCategoryService.getOne("950")));
						branchService.save( new Branch("954", "India & south Asia",bookCategoryService.getOne("950")));
						branchService.save( new Branch("955", "Iran",bookCategoryService.getOne("950")));
						branchService.save( new Branch("956", "Middle East (Near East)",bookCategoryService.getOne("950")));
						branchService.save( new Branch("957", "Siberia (Asiatic Russia)",bookCategoryService.getOne("950")));
						branchService.save( new Branch("958", "Central Asia",bookCategoryService.getOne("950")));
						branchService.save( new Branch("959", "Southeast Asia",bookCategoryService.getOne("950")));
						branchService.save( new Branch("960", "History of Africa",bookCategoryService.getOne("960")));
						branchService.save( new Branch("961", "Tunisia and Libya",bookCategoryService.getOne("960")));
						branchService.save( new Branch("962", "Egypt, Sudan, South Sudan",bookCategoryService.getOne("960")));
						branchService.save( new Branch("963", "Ethiopia and Eritrea",bookCategoryService.getOne("960")));
						branchService.save( new Branch("964", "Morocco, Ceuta, Melilla, Western Sahara",bookCategoryService.getOne("960")));
						branchService.save( new Branch("965", "Algeria",bookCategoryService.getOne("960")));
						branchService.save( new Branch("966", "West Africa and offshore islands",bookCategoryService.getOne("960")));
						branchService.save( new Branch("967", "Central Africa and offshore islands",bookCategoryService.getOne("960")));
						branchService.save( new Branch("968", "South Africa & southern Africa",bookCategoryService.getOne("960")));
						branchService.save( new Branch("969", "South Indian Ocean islands",bookCategoryService.getOne("960")));
						branchService.save( new Branch("970", "History of North America",bookCategoryService.getOne("970")));
						branchService.save( new Branch("971", "Canada",bookCategoryService.getOne("970")));
						branchService.save( new Branch("972", "Mexico, Central America, West Indies",bookCategoryService.getOne("970")));
						branchService.save( new Branch("973", "United States",bookCategoryService.getOne("970")));
						branchService.save( new Branch("974", "Northeastern United States",bookCategoryService.getOne("970")));
						branchService.save( new Branch("975", "Southeastern United States",bookCategoryService.getOne("970")));
						branchService.save( new Branch("976", "South central United States",bookCategoryService.getOne("970")));
						branchService.save( new Branch("977", "North central United States",bookCategoryService.getOne("970")));
						branchService.save( new Branch("978", "Western United States",bookCategoryService.getOne("970")));
						branchService.save( new Branch("979", "Great Basin & Pacific Slope region",bookCategoryService.getOne("970")));
						branchService.save( new Branch("980", "History of South America",bookCategoryService.getOne("980")));
						branchService.save( new Branch("981", "Brazil",bookCategoryService.getOne("980")));
						branchService.save( new Branch("982", "Argentina",bookCategoryService.getOne("980")));
						branchService.save( new Branch("983", "Chile",bookCategoryService.getOne("980")));
						branchService.save( new Branch("984", "Bolivia",bookCategoryService.getOne("980")));
						branchService.save( new Branch("985", "Peru",bookCategoryService.getOne("980")));
						branchService.save( new Branch("986", "Colombia and Ecuador",bookCategoryService.getOne("980")));
						branchService.save( new Branch("987", "Venezuela",bookCategoryService.getOne("980")));
						branchService.save( new Branch("988", "Guiana",bookCategoryService.getOne("980")));
						branchService.save( new Branch("989", "Paraguay and Uruguay",bookCategoryService.getOne("980")));
						branchService.save( new Branch("990", "History of other areas",bookCategoryService.getOne("990")));
						branchService.save( new Branch("991", "[Unassigned]",bookCategoryService.getOne("990")));
						branchService.save( new Branch("992", "[Unassigned]",bookCategoryService.getOne("990")));
						branchService.save( new Branch("993", "New Zealand",bookCategoryService.getOne("990")));
						branchService.save( new Branch("994", "Australia",bookCategoryService.getOne("990")));
						branchService.save( new Branch("995", "New Guinea & Melanesia",bookCategoryService.getOne("990")));
						branchService.save( new Branch("996", "Polynesia & Pacific Ocean islands",bookCategoryService.getOne("990")));
						branchService.save( new Branch("997", "Atlantic Ocean islands",bookCategoryService.getOne("990")));
						branchService.save( new Branch("998", "Arctic islands and Antarctica",bookCategoryService.getOne("990")));
						branchService.save( new Branch("999", "Extraterrestrial worlds ",bookCategoryService.getOne("990")));


		
			}
				
			} catch (Exception e) {
				e.printStackTrace();
			}
			
		};
	}

}
